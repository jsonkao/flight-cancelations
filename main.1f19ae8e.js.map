{"version":3,"sources":["vertices.js","shaders/borders.frag","shaders/borders.vert","shaders/texture.frag","shaders/texture.vert","main.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["project","lon","lat","out","Float32Array","lat_radians","Math","PI","lon_radians","x","sin","z","cos","y","tan","mag","sqrt","equirectangular_project","compute_vertices","buffer","count","Uint32Array","indices","coords","length","vertices","v","i","len","a","j","b","push","longs","lats","forEach","console","log","min","max","module","exports","regl","base","getVertices","fetch","then","response","arrayBuffer","getTexture","filename","Promise","resolve","image","Image","src","crossOrigin","onload","texture","main","landTexture","monoTexture","all","drawBorders","frag","borderFrag","vert","borderVert","attributes","position","primitive","drawTexture","textureFrag","textureVert","uniforms","tick","prop","aspectRatio","viewportWidth","viewportHeight","ar","frame","clear","color","depth","test","res","buf","Uint16Array","catch","error","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["function project(lon, lat) {\n  const out = new Float32Array(2);\n\n  const lat_radians = (lat / 180) * Math.PI;\n  const lon_radians = ((lon + 90) / 180) * Math.PI;\n\n  let x = Math.sin(lon_radians);\n  let z = Math.cos(lon_radians);\n  let y = Math.tan(lat_radians);\n\n  const mag = Math.sqrt(1 + y * y);\n\n  x /= mag;\n  y /= mag;\n  z /= mag;\n\n  out[0] = x;\n  out[1] = y;\n  // out[2] = z;\n\n  return out;\n}\n\nfunction equirectangular_project(lon, lat) {\n  const out = new Float32Array(2);\n\n  const lon_radians = (lon + 90) * (Math.PI / 180);\n  const lat_radians = lat * (Math.PI / 180);\n\n  const x = Math.cos(lat_radians) * Math.cos(lon_radians);\n  const y = Math.sin(lat_radians);\n\n  out[0] = lon;\n  out[1] = lat;\n\n  return out;\n}\n\nexport function compute_vertices(buffer) {\n  // First 4 bytes contain the number of \"indices\"\n  // Each \"indices\" is a count of how many vertices are in a line.\n  const count = new Uint32Array(buffer, 0, 1)[0];\n  // Next 4 * count bytes stores the vertex counts\n  const indices = new Uint32Array(buffer, 4, count);\n  // Rest of bytes contain float coordinates (alternating lon-lat pairs)\n  const coords = new Float32Array(buffer, 4 * (indices.length + 1));\n\n  const vertices = [];\n  let v = 0;\n\n  // Constructing line strings. `indices` is a list of linestring sizes.\n  for (let i = 0; i < indices.length; i += 1) {\n    const len = indices[i];\n\n    let a = equirectangular_project(coords[v++], coords[v++]);\n\n    for (let j = 1; j < len; j += 1) {\n      const b = equirectangular_project(coords[v++], coords[v++]);\n\n      vertices.push(...a, ...b);\n\n      a = b;\n    }\n  }\n\n  let longs = [];\n  let lats = [];\n  vertices.forEach((v, i) => {\n    (i % 2 === 0 ? longs : lats).push(v);\n  });\n  console.log('longs', Math.min(...longs), Math.max(...longs));\n  console.log('lats', Math.min(...lats), Math.max(...lats));\n  return new Float32Array(vertices);\n}\n","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform float time;\\n\\nvoid main() {\\n  // rotate2d(sin(time) * PI)\\n  gl_FragColor = vec4(1, 0, 0, 1);\\n}\\n\";","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nattribute vec2 position;\\n\\nvoid main() {\\n  gl_PointSize = 3.;\\n  gl_Position = vec4(position, 0, 1);\\n}\\n\";","module.exports=\"#define PI 3.1415926538\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D landTexture;\\nuniform sampler2D monoTexture;\\nuniform float tick;\\n\\nvarying vec2 v_position;\\n\\nvec3 LIGHT_REVERSED = vec3(-1, 1, 1);\\nfloat LIGHT_MAG = distance(LIGHT_REVERSED, vec3(0));\\n\\nvoid main() {\\n\\n  // Right now, we have v_position in [-1, 1] x [-1, 1]. Each fragment is\\n  // a point on the sphere. We have to figure out the long-lat from that point\\n  // to find the correct texture position.\\n  // First we take Cartesian coordinates.\\n\\n  float y = v_position.x;\\n  float z = v_position.y;\\n  float hyp_squared = y * y + z * z;\\n\\n  // 1. Discard points outside the sphere\\n\\n  if (sqrt(hyp_squared) > 1.) {\\n    discard;\\n  }\\n\\n  // 2. Determine front-facing spherical coordinate\\n\\n  float lambda_offset = tick / 400.;\\n\\n  float x = sqrt(1. - hyp_squared);           // Take positive face\\n  float lambda = atan(y / x) + lambda_offset; // [-PI / 2, PI / 2]\\n  float phi = acos(z);                        // [0, PI]\\n\\n  // 3. Convert long-lat radians to long-lat\\n\\n  float longitude = (lambda + PI) / (2. * PI);\\n  float latitude = phi / PI;\\n\\n  // 3.5. Draw lat/lng lines\\n\\n  // if (mod(longitude, PI / 360.) < 0.001) {\\n  //   gl_FragColor = vec4(0, 0, 0, 0.3);\\n  //   return;\\n  // }\\n\\n  // 4. Grab the texture color and do some color stuffs. Black = land, white =\\n  // no land.\\n\\n  vec2 longlat = vec2(mod(longitude, 1.), mod(latitude, 1.));\\n  vec3 texture_color = texture2D(landTexture, longlat).rgb;\\n  vec3 mono_color = texture2D(monoTexture, longlat).rgb;\\n\\n  texture_color += vec3(240. / 255.) * mono_color;\\n\\n  // 5. Calculate lighting. Allow it to only impact a little bit.\\n\\n  vec3 normal = vec3(y, z, x);\\n  float light = pow(dot(normal, LIGHT_REVERSED) / LIGHT_MAG, 1.);\\n  light = min(1.0, 0.55 + light * 0.3);\\n\\n  gl_FragColor = vec4(texture_color, 1.);\\n  gl_FragColor.rgb *= light;\\n}\\n\";","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec2 aspectRatio;\\n\\nattribute vec2 position;\\n\\nvarying vec2 v_position;\\n\\nvoid main() {\\n  // For some reason textures only cover the first quadrant of the clip space.\\n  // Remember that v_position should become the coordinate of the texture in\\n  // clip space. Cutting position in half means that (1, 1) in the clip space\\n  // becomes (0.5, 0.5) on the texture.\\n  // two quadrants' worth of space.\\n  // Adding 0.5 to position means that (1, 1) in the clip space becomes (1, 1)\\n  // on the texture, and similarly (0, 0) -> (0.5, 0.5) (the texture's center)\\n  // and (-1, -1) -> (0, 0).\\n\\n  // v_position = 0.5 + position * 0.5;\\n  v_position = position * aspectRatio;\\n\\n  // gl_Position should be position because the position attribute covers the\\n  // whole clip space\\n  gl_Position = vec4(position, 0, 1);\\n}\\n\";","import createREGL from 'regl';\nimport { compute_vertices } from './vertices';\n\nimport borderFrag from './shaders/borders.frag';\nimport borderVert from './shaders/borders.vert';\nimport textureFrag from './shaders/texture.frag';\nimport textureVert from './shaders/texture.vert';\n\nconst regl = createREGL();\n\nconst base =\n  'https://static01.nyt.com/newsgraphics/2020/02/04/coronavirus-flights/67d5b188d41684d2a82da11e94e358b4a769735e';\n\nasync function getVertices() {\n  return fetch(`${base}/geometry/borders.dat`)\n    .then(response => response.arrayBuffer())\n    .then(buffer => compute_vertices(buffer));\n}\n\nasync function getTexture(filename) {\n  return new Promise(resolve => {\n    const image = new Image();\n    image.src = `${base}/textures/${filename}`;\n    image.crossOrigin = '';\n    image.onload = () => resolve(regl.texture(image));\n  });\n}\n\nasync function main() {\n  const [vertices, landTexture, monoTexture] = await Promise.all([getVertices(), getTexture('specularity@2x.png'), getTexture('mono@2x.png')]);\n\n  const drawBorders = regl({\n    frag: borderFrag,\n    vert: borderVert,\n    attributes: {\n      position: vertices,\n    },\n    count: vertices.length / 2,\n    primitive: 'points',\n  });\n\n  const drawTexture = regl({\n    frag: textureFrag,\n    vert: textureVert,\n\n    uniforms: {\n      landTexture,\n      monoTexture,\n      tick: regl.prop('tick'),\n      aspectRatio: ({ viewportWidth, viewportHeight }) => {\n        const ar = viewportWidth / viewportHeight;\n        return ar > 1 ? [ar, 1] : [1, 1 / ar];\n      }\n    },\n    attributes: {\n      // Two triangles that cover the whole clip space\n      position: regl.buffer([\n        [-1, 1],\n        [1, -1],\n        [1, 1],\n        [-1, 1],\n        [1, -1],\n        [-1, -1],\n      ]),\n    },\n\n    count: 6,\n  });\n\n  regl.frame(({ tick }) => {\n    regl.clear({\n      color: [0, 0, 0, 0],\n      depth: 1,\n    });\n    drawBorders();\n    drawTexture({ tick });\n  });\n}\n\nasync function test() {\n  const res = await fetch(`${base}/20200123.dat`);\n  const buf = await res.arrayBuffer();\n  console.log(new Uint16Array(buf));\n}\n\nmain().catch(console.error);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}