{"version":3,"sources":["airports.json","node_modules/d3-array/src/ascending.js","node_modules/d3-array/src/bisector.js","node_modules/d3-array/src/bisect.js","node_modules/d3-array/src/count.js","node_modules/d3-array/src/cross.js","node_modules/d3-array/src/cumsum.js","node_modules/d3-array/src/descending.js","node_modules/d3-array/src/variance.js","node_modules/d3-array/src/deviation.js","node_modules/d3-array/src/extent.js","node_modules/d3-array/src/identity.js","node_modules/d3-array/src/group.js","node_modules/d3-array/src/array.js","node_modules/d3-array/src/constant.js","node_modules/d3-array/src/range.js","node_modules/d3-array/src/ticks.js","node_modules/d3-array/src/threshold/sturges.js","node_modules/d3-array/src/bin.js","node_modules/d3-array/src/max.js","node_modules/d3-array/src/min.js","node_modules/d3-array/src/quickselect.js","node_modules/d3-array/src/number.js","node_modules/d3-array/src/quantile.js","node_modules/d3-array/src/threshold/freedmanDiaconis.js","node_modules/d3-array/src/threshold/scott.js","node_modules/d3-array/src/maxIndex.js","node_modules/d3-array/src/mean.js","node_modules/d3-array/src/median.js","node_modules/d3-array/src/merge.js","node_modules/d3-array/src/minIndex.js","node_modules/d3-array/src/pairs.js","node_modules/d3-array/src/permute.js","node_modules/d3-array/src/least.js","node_modules/d3-array/src/leastIndex.js","node_modules/d3-array/src/greatest.js","node_modules/d3-array/src/greatestIndex.js","node_modules/d3-array/src/scan.js","node_modules/d3-array/src/shuffle.js","node_modules/d3-array/src/sum.js","node_modules/d3-array/src/transpose.js","node_modules/d3-array/src/zip.js","node_modules/d3-array/src/index.js","vertices.js","shaders/points.frag","shaders/points.vert","shaders/borders.frag","shaders/borders.vert","shaders/texture.frag","shaders/texture.vert","main.js"],"names":["module","exports","a","b","NaN","compare","length","ascendingComparator","left","x","lo","hi","mid","right","f","d","ascendingBisect","ascending","bisectRight","bisectLeft","count","values","valueof","undefined","value","index","array","empty","arrayify","Array","from","reducer","reduce","cross","pop","map","lengths","j","fill","product","some","push","i","cumsum","sum","Float64Array","v","variance","delta","mean","deviation","Math","sqrt","min","max","group","keys","nest","identity","groups","rollup","rollups","regroup","Map","keyof","key","get","set","prototype","slice","start","stop","step","n","arguments","ceil","range","e10","e5","e2","reverse","ticks","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","LN2","domain","extent","threshold","sturges","histogram","data","isArray","xz","x0","x1","tz","m","shift","bins","bin","_","thresholds","call","quickselect","k","z","s","exp","sd","newLeft","newRight","t","swap","numbers","quantile","p","i0","value0","subarray","value1","quantileSorted","number","maxIndex","flatten","arrays","merge","minIndex","pairs","pairof","pair","previous","first","source","least","defined","minValue","element","leastIndex","greatest","maxValue","greatestIndex","scan","shuffle","i1","random","matrix","transpose","row","project","lon","lat","azimuth","PI","inclination","sin","cos","y","Float32Array","console","airports","compute_flight_paths","buffer","Uint16Array","vertices","from_lon","from_lat","from_china","to_lon","to_lat","to_china","fromChina","forEach","compute_vertices","Uint32Array","indices","coords","len","regl","base","getVertices","fetch","then","response","arrayBuffer","getTexture","filename","Promise","resolve","image","Image","src","crossOrigin","onload","texture","flipY","createLineDrawer","frag","borderFrag","vert","borderVert","uniforms","aspectRatio","attributes","position","primitive","main","borders","landTexture","monoTexture","flights","all","spec","mono","getFlights","drawBorders","drawFlights","pointsFrag","pointsVert","drawTexture","textureFrag","textureVert","tick","prop","frame","clear","color","depth","catch","viewportWidth","viewportHeight","ar"],"mappings":"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,AfAe,AOAA,ACAA,ACAf,ACAA,ATAe,AUAA,AEAA,AXAf,ANAe,AsBAf,ACAe,ACAA,AfAf,ACAA,ARAA,AuBAA,AhCAe,AiCAf,I5BEWC,KAAK,ATFQjD,ACAfd,ACAeqC,AaAAW,AOAA8E,ACAAnF,APAAI,AUAAmF,AQAAgB,ACAA5G,A/BAAG,CqBAdsF,EhBES3G,AMFJ,ACAA,AmBAA,CpBAaL,AQAb,APAaA,AmBAAA,CnCAb,AuBAcA,CvBACA,ACA9B,ACAe,CDACK,ACAeL,AgCAhB,CzBES,AaFT,AGAf,ACAe,AQAiBK,A9BAjB,CKEU2C,AZFDnE,AaAAO,APAAP,AGAAmB,ACAAZ,AeASY,AGAfiH,ACAejH,AEATyH,AjBAAxE,APASjD,CPAlB,AaAA,APAA,AIAA,AQAA,ACAA,AmBAA,CZAA,C1BAYlB,AaAA,AVAZ,ACAf,AEA2BA,AIAA,AQASmB,ACAAA,AmBAAA,CtCArB,AKAA,ACAA,AoBAsBA,AWAtB,CzBER,ATF+BA,ACAf,AUAR,CdAe,AKASA,ACAT,AGAf,AgBAA,AGAf,ACAe,AEAA,AMAwBwG,A9BAxB,COAgBvD,CLACjD,AgBASA,AGAf,ACAeA,AEATkC,AMAS,A9BAAlC,EWA1B,ACAA,AmBAA,CZAA,AZAA,AuBA6B,ClCA7B,AeA8B,ACAA,AYA9B,AMAA,ACA8B,CjCA9B,AqBA+B,AZATkD,CXAU,A4BAT,AMASiF,ChCAC,AIAjC,AgBAA,AIAA,AtBAA,C8BAkC,C5BAR,AgBAS,AIAA,AfAnC,APAmC,EOAP,AuBAS/H,KAAK,CAACpB,MAA3C,EAAmD;AYIlE,AjDHE,AaAA,AVAA,ACAA,ACAA,ACAA,AGAA,ACAA,AQAA,AOAA,ACAA,AEAA,ATAA,AUAA,ARDa,ASAA,ACCb,ATDF,ARCEgE,AuBAA,ACAA,AvBDF,ARCE,AmCDF,E5BCEA,ECDEO,EZCEzD,AEAAwB,AIAAS,ASAAC,AOAAA,ACAAlC,APAAiC,AUAAA,AQAAqD,ACAA9D,A/BAAxB,CqBAC,AdAA,AuBAA,AtBDA,EfCElB,AaAA,ATAAwB,ACAA,ACAAvB,AGAP,ACAOM,AQAP,AOAA,ANAA,AUAA,ACDsBgI,ACCf5G,AOAA,CtCAC,AMAA,AIAR,AIAQ,AuBAA4H,AtBDAtG,CZCC,AuBAA,AZAAmB,APAA,CFAC,AgCAA,ACAA,CtCACnE,AKAX,ACAWD,AsBAAwB,AUAX,CtCAO,AGAK,ACAA,AEAL,AoBAK,AIDC,ACCD,AhBDA,ARCA,CJAZ,ACAapB,AsBAb,AID4Be,ACCfS,AhBDAsB,ARCb,COAA,AuBAc0E,CrCAC,AMAA,CNAC,AMAA,AsBAhB,APDsBrH,APCN8D,AuBAA,CrCAT,AMAA,AeDM,AUCN,AhBDC,CgBCUf,AhBDA,CFCA,ATAX,AiBDkB,ASAZ,AOCM,CrCACtD,AMAAC,AsBAAmI,AdAA,AuBAAR,AtBDZ,CfCa,AMAA,AwBDeY,AfAtC,CXCwB,A2BAf,AMAG,CjCAV,AUAuB,AuBAvB,CrCAwBvI,AMAAD,AyBAA+D,AjBAAM,CdAJ,AMAA,CsBApB,CED0C,ACCf,C/BAC,AMAA,AsBAA,AdA5B,CdAoB,AMAA,CwBDyBoE,AhBCfnE,CiBACsE,C/BAC5I,AMAAC,CNAC,AMAA,CwBDpB,AhBCqB,EgBDiB,C9BCdA,AMAAD,AyBAA,AjBAA,CdAL,AMAA,AyBAM+D,AjBAAQ,CAAC,EdAE,AMAA,AyBAJ,C/BAL,AMAA,AyBAzB,AjBAmCC,CiBA1C,E/BA6CtE,AMAAA,GNA7C,AMAA,GQAmD,CAACE,MAAf,IAAyB,CAAzB,IAA8BiE,IAAI,GAAGD,KAAP,EAAcA,KAAK,GAAG,CAAtB,EAAyB,CAAvD,IAA4DG,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAACD,IAA9G;AFEK,AZDN,AiBDD,AfAA,AWCI,ATAH,ACDC,ACCD,AGAC,A0BDF,AzBCC,AuBDD,ARCE,ACAA,AEAE,ACAF,ARDA,ASAA,ACCD,AjBCC,AuBFA,AdAF,ACAA,ATDA,AREE,IKCSrC,AGFP2C,EVAWrD,AICT6B,AgBAA8E,ACAAxF,AGAA4F,AfCA9F,AuBDA+E,AtBDA,ARCAzE,CKCQ,AEAP,AuBFL,CPAMyF,CrBCN,AiBAO,ALDAhI,ANAA0C,CHEQzB,ASFP,APEA,CDDCjB,ARDS,AuBCTiB,AdCA,APDT,CMAE,AaAQ,AZCV,CYDA,AIDW,AfAA,CVAU,AoBCT,AIAA,AdDA0B,CHEQ,APFpB,AgBAa,CTEQjB,AgBDnB,AEDY,CLCC,AIAA,CJAC,AIAA,ACDhB,AfAO,CHEF,AaDL,AIAA,ARDO,ANAU,EAAV,CMAa/B,ANDtB,GMCS,GAAmB,CAACK,CAA3B;A4BIF,ApCFG,AVDD,AEAA,AMFF,AOEE,AOCA,AGAC,ATDD,AUCA,ARDD,ASAC,ARDF,AREE,AuBFA,ACCA,AvBFF,ARGE,AmCFF,G7BAE,CECEsE,EZAEzD,AeAAA,AOCAG,ANDAH,AUCAG,ACDAmH,AhBEAnE,AuBDA/B,ACDApB,AvBAA,ARCA2B,COCC,AuBHL,EhCCOJ,AUAAM,CDECA,APDA,CkBAC,AIAA,E1BDE,AeAA,ACAA,AmBAA,AvBAA,ARCA,CkBAC,AIAA,ACDZ,AhBEY,ACFAC,ARCZ,CkBAa,AIAA,AfCAE,CWDb,AIAA,E1BDgB/B,AeAAA,ACAAA,ALER,AwBFQA,AvBAT,CDEU,ACFA,CDET,ACFD,CVAY,AUFrB,CVEsBO,ASEAqB,ITFb,ASEiB,CXFxB,AEAyB9B,AaAzB,ACAA,ALEyBsD,AwBFzB,EnCA2B,AeAA,ACAA,AmBAA,ExBEP,CAAU,CTFvB,ASEwBJ,ETFEjD,ESEE,GAAGgD,ETFE,GSEV,ETFe/C,ESEEiD,IAA3B,CAAZ,ETFyB,ESEuB,CTDpD1B,ASAJ,CTAK,IAAKF,GAAG,IAAI,CAACE,CAAD,IAAM,CADU,GAE7BA,CAAC,IAAKF,GAAG,IAAI,CAACtB,OAAO,CAACwB,CAAD,EAAIrB,KAAK,EAAT,EAAaJ,MAAb,CAAR,IAAgC,CAF1C,CAAP;AYAF,AhBAe,AYEd,AVDG,ACCJ,ACCC,AGHc,ACCb,AyBDa,AFAA,AdCX,AQAF,ACDa,ACEd,ATDG,AWAF,AVDF,ANCE,AsBDa,AECX,AtBDW,AuBAA,AhCEb,AiCFa,M/BCTC,AiBAAA,AIAAuH,AhBEAjE,APDAhC,GJDG,ACCAjB,AIFeuB,A0BAAkG,AFAAL,AdCf,ACAA,AiBDeQ,AECf,A/BCA,EuBDE,AhBEA,CPDC,CJDC/H,AMAA,AiBAA,AUDE,AECFA,A/BCX,CHAF,A4BFe,AFCD,AhBEA,AsBHeH,ChCEdf,A4BFee,AdCfG,ACAAA,EeDA,CjCASnB,AECpB,AKDW,ACCGkB,AyBDeF,ARCfE,ACDMF,AbGNQ,AwBFd,AtBDoBR,AuBAAsI,C/BAUtI,AsBChC,CZAE,ACAA,AiBDW,AIAW,CpCE1B,A4BFe,C7BCOA,AiCDehB,AECfgB,ClCCC,A4BFehB,AlBGxB,CoBHC,AhBCSgB,ASDT,ARCSA,ALEAoD,AEHT,AuBAA,CtCAA,AOAA,AMGD,CoBH2BpE,APATiB,AbC9B,AED8B,AuBAA,CtCAC,AOASA,ACCxC,AiBAA,CvBAE,AmCAA,C7BAyB,AiBAA,AUDd,CjCCe,A6BDe,AdCzC,ACAA,AmBA0B,CFDgB,ClBCd,ACAA,CeDgB,AFAAL,ALAjC,CnBAA,CmBA0B,CnBAU,A0BAAA,eFApC,EAA4C,CEA5C,EAA+C;AeI9D,AhDHE,AECI,ACCJ,AIFA,ACCE,AyBDF,AFAA,AdCI,AOAJ,ACAE,ACDF,ARCI,AUAJ,ARAK,ACFP,AFCA,AgBAE,ACEA,ACDI,AtBDJ,ADCa,AwBDb,ACAA,MvCAIZ,AiCAAiD,AFAAD,APCA/B,AIAAA,AUDA,E/BAEwB,A4BAArB,AGAAgD,CnCEC,AIFA,ACCA,AyBDP,AFAA,ANCO,ACDA,AUEAiC,ArBFAvD,AuBAA,ACAA,CrCCC3B,AeAAA,ACAAA,AEAOmG,AgBCf,ACDQnG,ClCCClB,CIFC,A6BEA,AEFAqJ,CtCAC,AwBCA,ACAAnI,AGAA,AODA,ApBAA,CfAClB,AeAAqE,CbCC,AMAAnD,ASAA,ACAA,AmBAA,CFDC,ChCEC,AiBDV,CIAWD,ACAd,AGAcA,ARAOF,AiBAP,AtBDT,ADCeiD,AwBDN,CpCCC,AeAA,ACAA,AmBAA9C,AtBDA2B,AuBAA7C,CtCAb,AGEc,AKDhB,CLCK,CAAP,AsBDoBe,CvBAZ,AeAA,ACAA,AHDa,ADCR,CNASA,AYAjB,AiBAD,AtBDkBiE,CfAC,AcCMf,AwBDzB,CtCAJ,AoBC+BjD,AiBAP,ACDxB,CpCCyB,AsBAzB,AIAA,AbDiB,CfASjB,AECAmB,AeCd8B,AQDV,APCUD,AHFc,AuBAA,CdCC,AIAA,AdAd,CNAX,AiBA0B,CRCb,ACAA,AJDoBjC,CNAL,AkBDdC,CxBCe,AkBA1B,AmBDYqD,CtBEClD,ACAAA,ClBFe,AOAdH,AaCqB,AkBDP,CpCCC,AYArB,CZAsBG,AoCDT,CtCAUjB,A0BA7B,AZCmC,CGC9B,ACAA,CQFY,CnBAd,A4BAec,CjCCA,AqCDlB,ChCAoBC,AUECgC,ASFrB,AREqBD,AqBF5B,EbA6B/B,CTEE,ACAA,ChBDcE,AiCD/B,CpBAkBH,CoBAChB,C5BAvB,CAAV,AUEoCkB,ACAAA,ChBDhC,AwBDG,CAAP,CxBCoD,AaD1B,CAAT,CoBAH,CnCAyC,AmCAvD,CnCAwDlB,CeAb8C,CEEf,ACAA,GHFmB,CEEE3B,ACAAA,AHFDsE,CfAO,CAA7B,CeAnB,EEE+C,ACAA,EHFC,CAAvD,CEE0DtE,ACAAA,KDDlD,ACAA,CDAJ,ACAA,EDC+D,ACAA;AFFrE,AfAA,ADCE,AECM,ACCP,AIFC,ACCI,AyBDJ,ACDa,AHCb,ACDa,AfGP8B,AODJ,ACAE,ACDL,ACEc,ATAPD,AUDJ,ARAF,ASDA,AVAa,ANGb,AsBHA,ACEEX,ACDIE,AfFO,ACAA,ARCd,ADCC,ARAA,AiCDD,ItCDG5B,AmCGA0B,CAAC,CHFCsG,AFAAA,AXCA1H,ANAA0D,ARAA1D,CuBDC,CZECgC,ACAAD,AkBAAF,ACDAP,CrCDC,AOAAE,A2BDewG,AFAAH,AREf,AGCeZ,ACDf,ATDetB,ANGf,AsBHAxF,CjCCCL,AKDA,ACCAI,AiBAAA,CRCC,ACAA,ALCAkB,AwBFA,CxBEF,AuBDG,C7BFCS,A0BAA,AFAA,AXCA,ASDA3B,AOEAkI,AtBDX,ARAW,CWCClI,AUAC,ATADA,AiBFA,CjCCN,AMAO,AgBAAA,ACAA,AECe8G,ACDf9G,AfEAiD,AwBFAjD,CJDC,AFAA,AlBGd,CNHe,A4BAA,C5BAC4B,AaCA7B,ASDhB,AhBGgB,AsBHT,AbDeF,ACAAA,AjBENE,CLFC,AOEA,AwBFJ,AfGP,AQDW,APCX,AkBAA,CJH2BF,ARE/B,AIAA,ATDW,AkBCP,CJDN,AFAA,AJEa,ARFqBK,AgBAfH,ClCDC,AMCT,A2BDE,ALCOF,CtBACyB,ACCjB,A0BFgCzB,ATE5B,AEC4B,CpBFzB,AiBCWA,AIAAA,AQCAqF,AdHT,ACAA,ChBCL,ACCe,A4BCA,CJHV,AbCA,AGDiBrD,ACAAA,CEEL,ALAzB,AgBCM,A9BDN,CCD0BP,AyBDezC,APEfmB,AID1B,AVAyC0F,CZAzC,A2BDa,AdEc,ADDd,AGDA,ACAA,AjBEc,CkBAzB,AIAA,ACD0B,AMArB,ACEqB,CFHgB7G,AfCAG,AiBE1C,AdHiC8C,ACAAA,CCEL,AIAA,CHAC,AUDA7B,CbDlB,ACAA,CSAmC,AbCA,CMCd,AHFM,ACAA,CEELD,CSFgB,AFAAP,AbCA,AgBAnD,ChBAa,EeDyCA,AfCAJ,CMC7B,GxBFII,CkBC8B,CMCdO,ENDiBE,GMC1D,EAAgD,ANDe,CAACpB,CaDvD,EAAiD,CEAjD,EAAoD,AfCH,ElBD1C,CAAtB,AkBC+E,CAAhE,EAAmED,OAAO,GAAGY,kBAA7E,EAAwF;A6BGvG,A/CHO,ADCHT,AECG,AKDN,ACCO,A0BFN,AxBFa,AsBEb,AfGK,AODD,ACAE,AECN,ATAK,AUDD,ARAF,ASDA,ARFJ,AFEE,ANGEoE,AsBHH,ACEG6C,ACDG,AfFL,ACAA,ATCA,AwBDA,AhCEE,AmCHJ,IxCCWvG,ADCPV,AaGAoE,AuBDA6C,CAAC,CFHCpH,AFAAA,AlBEAqC,CAAC,AwBFA,CtCCC,AwBCAjB,AIAAA,ACDAoH,AOEAnH,C1BLgB6B,AiBKf1B,APDA,ADDAhB,ANGA,ASJAsC,ACAAA,AjBEA,CNDC,AyBCA/B,AZEAsB,ACFA,CDED,ACFE,AwBFAA,C9BECW,AKER,ACHF,AwBDU,CJAC,AFAA,AREP,AIAA,ARAO7B,ASDT,AOES,AdHA,ACAA,AjBEAA,C4BFClB,AxBFC,AsBEDA,ALGA,ARFA,AiBEAoG,AdHA/B,ACAAA,CtBAQ,AOEP,AEJetD,AeItB,AECOS,AEFA2G,AhBGAnE,AuBDA,AEHA,CAAC,CbEC1B,ANDApC,AmBDV,CrCAkBQ,AmBErB,AgBCc8G,AdHT,ACAA,AjBEL,CqBCK,ALHU,ACAA,AeAApB,CtCCAxG,AQCCqB,A0BFd,AFAA,APEc,AECA8G,AEFA,AhBGA,AuBDP,AdHO/E,ACAAA,AeAA,CtCCV,AUHK,AmBGMb,AVAnB,AiBEE,ChBDkBpB,AdAAA,CNDAZ,AUHgB,ASGf,ANGAiC,ASJA,ACAA,AeAA,CtCCb,AyBCclB,AZEA,CqBJC,AFAA,AHCV,C7BAUd,AkCDvB,AxBFuC8C,AsBEvC,AHCwBkF,APDArF,ACAAA,CIGC,AdCAmB,CbHjB,AkCDkB,AFAA,ALGA8D,APDxB,AdAA,CEAI,AiBAA,AHFW,ACAA,CvBCU3H,AUHd,AUIe,AdAA,CEAC,AKE3B,CbHM,AUHqC,AmBGf,C5BDQ,A4BCPiI,C5BDQ/H,ADCR,A2BEN,ALHO,ACAA,CWAC,AFAA,ALG1B,CAAP,G1BHK,AqBAgC,CCAC,CMCR,ASDL8I,ETCgBnI,ISDpB,CTCS,CAAjB,ASDoBlB,MAAZ,CAAhB,EJAqCe,AFAAA,AMAAuI,IhBAIvI,EYAb,AFAA,ATAeA,EWAEhB,AFAAA,CMAC,ChBAd,EAAiB,ACAhB,AeAgB,CfAtB,EWAC,AFAA,CEAP,AFAA,AVAW,ACAqB8C,AeAAtB,IhBAI,ACAA,CAAC4D,AeAT,CAAUiB,CAAV,CfAI,AeA1D,CfAmE,CeAC,EAAEhE,CAAF,GAAMgE,CAA1E,GAA8E,OhBAPrF,ECAEA,IDAX,EAAiB,ACAZ,CAAT,EAAwB,CDApB,ACAqB,CDAnD,ACAkD,GAAK,CDAC8B,ACA9B,CAAzC,CAAV,CAAP,CDA4F,CAACsC,GAAL,CAAS,oBAAMpE,MAAN,CAAT,EAAwB,CAAC,CAAD,GAAK,CAA7B,CAAvE,CAAV,CAAP;ANAF,AhBEM,AECD,ACCL,AKDU,AyBFR,ACAA,AxBFA,AqBEA,ACAA,AfGG,AQDE,AECN,ATAI,AEDC,ASDFuH,AVAA,ANGD,AuBDClH,ACDC,AfFJ,ACAA,ATAC,AwBAE,AhCEE,AmCFN,IZCIkH,AOEAlH,EHHErB,ACAAgJ,AHAAhJ,ACAA4I,AlBEAxE,CAFJ,CKCM5D,ChBECe,AOLA6B,A0BKA,AEHA,AGAAqG,CzCCCpJ,AoBCAc,AgBCAkF,A9BDAlF,C8BCC,CpCFC,A6BAA,CIDC,AvBFA,AqBEA,AZCA,AmBDAa,C9BECb,AyBFAlB,ACAZ,AxBFYe,AqBEAf,ACAZ,AIGYwH,AEHA,ClBEC,ASDAtG,AvBCA,CNDC,AmBAAhB,AiBEP,AKHT,CtCGA,AiCAI,AEHa,AGAAuJ,CtCGC1I,AmCHA,C9BEC,AYAA,AkBFV,AhCEU,CNDb,AiCDA,AvBFO,AqBEP,AFCF,AVAI,AiBEYK,AKHpB,CHAqB+C,CtCCC/D,AUHAgD,A4BEb,AGAasG,CjCECxI,AYAb,ADDa,AbCb,CNDc,AGExB,AmCHwBqI,CLAC,AFAA,AKGA,AKHzB,CtCG0B,A8BHxB,AFAA,AZCE,AiBEsBnH,CpCFC,AoBCA,AgBCA,AEHA,AhCEA,AmCFA,CzCCL,AQCZ,AyBFkB,AFAA,AXEAlB,ADDA,AbCAA,EEAE6B,A4BCAyE,AEHA8B,EFGL,C5BDQ,AYAA,AgBC7B,A9BD6B,GEAGtG,AYAA,AdAA,CcAC9B,AdAAA,EEAE,AEJ1B,A4BE0B,CAACkB,C5BFRgB,A4BEO,C9BEGlC,AYAf,AkBFG,AhCEH,GgCFkB,E9BEf,AYAiBA,AdAAA,EgCFEK,GlBE3C,AdAA,EcAgD,AkBFT,AhCES,CgCFC4C,CAAV,CAAzC,C5BFS,C4BE8C,C5BFjBjB,C4BEmBnB,CAAF,E5BF9C,CAAX,A4BE+DoC,CAA7D,GAAiE;AUGrE,A/CHO,ADED,AECH,ACCD,AKDO,AyBFL,ACAF,AxBFD,AqBEG,ACAF,AfGC,AOFG,ACCD,APCF,AUFG,ARCE,ASDJoE,AVAE,AiBEFnH,ACDD,AvBHD,AwBCImI,AhCEE7G,AmCFN,GvCJA,AeAA,ACAA,AmBAA,CpCGS7B,A4BEP0H,AOEAnH,EFHE4B,AFAAD,AlBEA4B,AwBFA4E,ELAER,AFAAJ,AzBEAjG,AmCFAiH,CvCEC,ACCA,AKHD,A0BAC,AFAA,AfGA,ACAA,AWFA,AOEA,ACDA,ACFA,CtCCCtJ,AwBAAa,AIAAA,AQEAkB,AEHAL,CFGC,AtBJT,AwBCO,CtCCG,AkCDA,AFAA,AHCA,AVAAoC,AmBDN,CJAO,AFAA,AbCA,AbCA,CLHQ,AiCCnB,AFAA,AZEYjD,AgBCAsG,C5BDC,AgBDA,AIAA,AUDA6B,AGAA,CzCCC,AGEAtI,A8BHZ,AFAA,AFCA,AVAYR,AiBEP,A9BDOW,CLHQR,AmCIpB,CKHc+I,CjBCC,AIAA,ARCX,CpBDF,AoCEctC,CjBFC,AiBEjB,AEHiB,AhCEA,AmCFA,CzCCC9G,AGEb,AmCHa0B,CdCZ,AIAA,AUDW,CtCCG,AmBAA7B,AmBDT,AhCESyC,CgCFCP,AGAAS,CHAV,CtCCYjD,AGEA,AmCHrB,CtCCsB,AwBCdoD,AIAAD,ATDE,AbCR,CNDqB/C,AyCDA,CAAC4J,CjBEb,AIAA,ATDc,ClBFQ,AkBEjC,AsBDmB,CxCDe1J,CuBGpBgB,AIAAA,C5BDE,AGEb,AsCH0B,ExCD5B,CwCCc,CtCGkB,AqBDzB,AIAA,AaFZ,IjBE4B8B,AIAAD,GJAG,AIAA,KzBCkBhC,AqBDbE,AIAAA,MzBC7B,GAAmDF,AqBD9B,AIAA,IJAqBG,AIAAA,EzBC1C,GAA4DK,AqBDb,AIAA,IJAIL,AIAAA,CzBCc,CAACM,GqBFjE,AIAA,CzBE2D,AqBF/D,AIAA,CzBE0ET,CqBDX,AIAA,KzBCA,CAAnE;AaJF,AdII,ACCH,AKDS,A0BFR,AFAA,AfGE,AODIiC,ACAL,APCC,AUDID,ARAD,ASDJ,AVAG,ANGJ,AuBDC,ACDC,AvBJF,AwBEG,AhCEGJ,AmCFN,GhBJA,GSIIxB,AFAAA,AlBEA+C,EZAE/C,AeCAA,AODA6B,ANCA7B,AUDA4B,ASAA5B,A/BAAwB,AmCFAkH,ChBEC,AZEAvF,CCNP,CoBES,AFAA,AREA,AIAA,CTDC8B,AbCA,CJAC,AeCA,ACAA,ACFA,AkBCA,C7BACrD,A0BFA,AFAA,AREA7B,AIAAA,AfEZ,CqBJa,AFAA,C9BEC,AgCFd,AFAA,AfGc,ACAA,ACFA0F,AkBCA,A/BAAlE,CJAC,AMAA,ASCA,ACAA,ACFA,AkBCA,CnCAb,AeCA,ACAA,AmBDA,CbAI,AIAA,AaFW,CjCECxB,AWDAhB,CKCC4H,AIAAI,AtBAA,CmCFCrF,EtBCN,AbCQ,CEAd,CFAgB/B,AmCFA,CjCECiC,AWDA,AsBDA6G,CtBCrB,CKCuB,AIAA,AaFP,CjCEQ,CFAtB,CkBAwBzI,AIAAA,AaFA,CjCECD,AiCFX,GAAcwI,CjBE5B,AIAA,CpBAmB,CiCFY,IAAI7G,IAAI,CAAC+G,EAAL,GAAU,GAAd,CAArC;AOEF,AhDDM,AQEI,AyBHN,AvBDG,AqBCH,APGG,ACAH,AGAG,ARAF,ADDC,ANGL,ACDC3F,AwBHC,AhCEK3B,AmCDN,E3BEA2B,IAAI,EWDE9C,AnBAAmB,AmCDAnC,CRFC,AvBDOkD,AqBCP,AjBIA,A2BFA,C3BECY,CRDC,CaDC4C,AsBAAhE,CzCDCzC,AyBEA,ANDA,CXCC4C,AMCZ,CbLapC,ADEA,AiCDAgI,AvBDR,AqBCQA,AzBGAlG,CIJQ3B,AeIP,ANDA8B,ALEAmB,A2BFA,CjCCC,AiBAA,AgBDA8F,CzCDCzJ,AyBEd,EzBFE,AQEca,AWDA,AbCA,AmCDR,CtBAS8D,ALEA,A2BFA6E,CzCDC,AiCDlB,AvBDG,AqBCH,ErBD2B,ASGf,ALEQ,ARDA3I,CEAd,AWDeiD,ALEAH,CmBJCjD,AFAAA,AZEV,CXCWiC,AEJOE,ASG5B,EbCuB,CEAC,AMC5B,CJLK,CuBCH,AFAA,AjBI4BpC,ARDA6B,AmCDpB,CjCCqBzB,AEJO,CuBCN,AFAA,EzBGd,AmCDgB2B,C3BEC,ARD7B,CEAmB,EMCa,A2BFA,C3BEC/B,A2BFAiJ,GAAL,CAASJ,C3BE3C,M2BFkC,CAAlC;AzBHF,AhBGQ,AECJ,ACEJ,AKDS,AyBHH,ACAJ,AxBDA,AqBCI,ACAJ,AfGE,AOAC,ANAD,AUAC,ARAF,ASFD,AVCI,AiBEJ,ACFE,AvBEF,ARDK,AmCDL,GrBLA,GNOI3F,CoBJC,AFAA,CSECgG,CvCAC,ACEAvI,AOLA0B,AOIA,ACAA,AEAA,ASFAgF,AOGA/G,ACFA,AIAA,E3BEE,CdHCd,AiCDAY,AFAAA,AZEA4F,AsBAAjE,CvCAC3B,AgCFAA,AxBDA,AsBCAA,AfGAA,ACAAA,ACDA,AkBAAA,C3BHCH,AmBEZ,AOGA,CpCHa,CGGf,AgBFgB,ALEAkD,A2BFA,CtCECvC,A8BJA,AFAA,AUEAoI,CzCDC1J,AECd,AgCFF,AFAA,AfGE,ACAA,AmBDA,ErCDgB,AiCDAL,AvBDP,AqBCOA,AjBId,A2BFM,CAAS8J,CvCAC9I,AgCFAA,AxBDAQ,AsBCAR,AfGAA,ACAAA,ACDA8B,AkBAA9B,CrCDCV,AGGvB,CWAwBS,CdHN,AGGO,CgBFC,CcFC,AvBDA,AqBCA,AZEAiG,CjBAvB,A+BFwB6B,ACA1B,AxBD0BpH,AqBCAoH,ACA1B,AfGE,ACAA,AmBDA,CvBEyB,CdHC,AECA,AgCFA,AFAA,AfGA,ACAA,ACDR,AkBAQ,CrCDtB,AmBCuB,CTHlB,AIKmB,A2BFpB,C3BEV,CJLgCxF,CuBCP,AFAA,AZEQyD,ALEA,CmBJ7B,AFAA,AZEyB,AsBAKhE,GtBAG,CAAjB,AsBAkB,CtBAlC,AsBAmCiH,C3BEC,CAAC9F,C2BFP,CAAS2F,G3BEH,CAAP,EJLtB,C+BGuB,C/BHQzG,A+BG1C,I/BHW,CAAX;AsCIF,AhDDQ,AECF,ACEJ,AKDK,A0BHH,AxBDH,AsBCG,AfGE,AOAH,ACDC,APCE,AUAH,ARAC,ASFH,AVCK,AiBEL,ACFK,AvBEJ,AwBJA,AhCGG,AmCDH,GjBPA,AIAA,GMKI/B,AFAAA,AlBIAuD,EMDEvD,AqBDA0F,CtCEC9F,AqBDA,ACDA,AGCA,AUHAuI,AGEA,CvCAC,AeCA,ACAA,AmBDApI,CnCACA,AgCFP,AFAA,AfGOA,ACAAA,ClBFCnB,AmBCAiH,AsBAAnE,ChBAC3B,ALCA,ANCA,CKFC,ChBEC,AkCFA,CnCAC,AeCA,ACAA,AEAA,ANCA+C,A2BFA,CrBCC,ADDA,AsBAA8F,ChBAb,ALCA,AiBDc,ACFhB,CtCCiB,AECA/I,ACEAU,AcDAV,ACAAA,AmBDAA,CrCDCpB,AcGA,A2BFR,CzCDS,AyCCAiK,CzCDCvJ,AyBCAS,CNAC8B,ALEAmB,EdHF,AGGI,CHHN,AECO,ACEA,AcDA,ACAA,AmBDA,CnCAC9C,AeCAA,ACAAA,ACDA,AkBAAA,CrCDCf,AyBCxB,ANAwB2C,ALE1B,CdHiB,AGGU/B,CHHjB,AyBCkB,AXEAoD,CAAC,CZFL,AeCA,ACAA,ACDH,AkBAG,AIAd,CzCDqB,AmBCA0C,AsBA/B,CzCDM,AEC0B,AeCA,ACAA,ACDA,AkBAA,AvBEA7C,CXAT,CHHW5D,AECAe,ACElC,AcDkCA,ACAAA,AmBDAA,ClBAC2F,CnBDC,AmBCL,CLEH,EdHWxG,AECf,AeCA,ACAA,AmBDA,AvBEe0D,CKFCG,CjBACpD,AeCAA,ACAAA,ACDA,AkBAAA,CrCDC,EmBCE+F,ALEA,CdHC,AmBCd,CnBDG,CAA5B,AECkB,AeCA,ACAA,AmBDA,AvBEuB7C,CZFvC,AeCA,ACAA,AmBDJ,ClBA6CE,CAA5B,AkBA6B,ClBAnC,ALEa,CdFjB9D,CEA0C,AeCA,ACAA,AJCA4D,CdFxC,CmBA0CmC,CAAC,CnBAxC9F,AEAR,AeCA,ACAA,AJCiD,EKFE6D,CnBAhD,AmBAiD,ALEAA,CZFC,AYEjC,CZFkCjD,AeElD8B,ACAAD,CCFmD,CAAR,CFExC,ACAA,EhBFoD,AiBAA,CFEjD7B,ACAAA,ACFqC,EjBAe,CAACA,AiBAA,CAAC,CFE5D,ACAA,ACF2C,GjBAM,AiBAe,CFEhD8B,ACAAD,ACFb,CAAX,EFE2B,ACAA,ChBFkD7B,IeE7CD,ACAAA,ChBFhC,EAAoF,MeE5D,ACAA,IDAqBC,ACAAA,KDAK,ACAA,IDAIA,ACAAA,KDDlD,ACAA,CDAJ,ACAA,EDC+D,ACAA;AFNrE,AhBKO,AEAC,ACEP,AKDI,AyBJC,AFAA,AdKE8B,AODJ,ACDE,APEED,AUDJ,ATDE,AkBAET,AvBEN,AwBJD,AhCGE,AmCAD,GnCRA,GQSI,A2BDAnC,C3BCC+D,A2BDA,CxBCClB,ACAAD,AmBFAT,CbCC,AIAA,AtBAA,CJDCxB,A+BHA4H,AFAAA,ANGA,AgBCA,CxBCC,AQFAxH,APEA,AmBFA,AvBEA,A2BDT,CtBDU+F,CKCC/F,AIAAA,AaAA,CxBCCA,ACAAA,AJAA0D,CZFN,AmCAO1D,CZAC,CQHC,AFAA,CPIb,AIAA,CXCI,AQFWF,APEX,ACFW,CcFP,AFAA,AMEJ,AICY,EjBAED,AIAAA,ATDA8B,GsBCT,ChBDa,ANAA,CMAC3B,ANAA8B,ALEA,CUDvB,AIAA,AdCwBgB,EUDE,AIAA,ATDR,CAAS9D,CMAL,CXEC,CWFO,CNAZ,ALEa+D,CWFC9C,CNAC0B,ELEV,EWFD,ANAe,ALEA/B,CKFCgE,CMAC/D,CQFrBG,AFAAA,EjBIK,CKFU,ALE/B,CKF0C0F,CcFpC,AFAA,ANEc,ANAuB,CMAvC,CQFmBmC,AFAAJ,CZEuBvC,CAAC,ALEA,CAA/C,CWFiD,CNACU,CAAJ,CLEM,CmBJ9C,AFAA,ANEF,AXEiDjC,CKFCV,CAAZ,EcFP,AFAA,ANEsB,CQH9C,AFAA,ANG+CjD,ANAA8F,EAA3B,CcDzB,AFAA,AZCU,ALE6C,CKF7D,ALE8D9C,CWFC,GAAG,AXEL,CWFMhD,AXEvE,EAAyE,GWFZ,IXEmB,CWFCA,CXER,IWFrE,EAAoF,CQDpEA,AFAAA,KEAV,AFAA,EEAiBA,AFAAA,KEAjB,AFAA,MEA4B,AFAA,CEFlC,AFAA,EEEqC,AFAA;AiBC3C,A9CCO,AMCJ,AyBFK8B,ACFJ,AxBAG,AqBECD,ACFJ,AfKG,AODD,ACDE,APED,AUDD,ARDF,ASDG,ARPQ,AFQT,AkBAC,A/BCH,AmCCF,GjCZA,KyBSMC,ACFAA,AHEAD,ACFAA,A1BIA5B,CEAC,AEJOmC,AUGP,ASDO+E,ARPQf,AoBUf,CjBDC,ACDAxG,AGCA,CKFC,ACFA,AHEA,ACFA,ARIAI,AIAAA,CTDCgG,CCAChG,ASDN,AvBEM,AmCCA+I,CRHCrB,ACFA,AHEAA,ACFA,AHEOhJ,CKFb,AxBAD,AsBAC,APGA,AIDD,CnBFgBmB,AcIP,AIAA,AtBAA,CmBDCuB,AIDOzC,ARPT,AfSE,C4BHPE,AFAAA,AZEN,ASDG,ARP0BgB,AfS7B,CkBAeC,AIAAA,CHDC,AIDO,AVCP,CcDZ,AFAA,CrBFD,AUGeD,CDAC8B,CTHQnB,AeGPR,AJRT,CaME,AFAA,ASIR,CPJSA,AFAAA,ARGQ,AIAA,APTeqG,AoBUf,CjBDCrG,AIAAA,APTZ,AFQY,AsBEA8I,CrBFvB,ADAwBjH,AsBEF,ChBFlB,AJRoC/B,CXKrC,AUGuB,AqBEA6F,CPJb,AFAA,AbEM,AsBEG,C/BLa,AcIb,AIAA,ATDMtG,AsBEvB,CPJgBW,AFAAA,ASIvB,CjBDgC,AIAA,ClBJQgC,CcIN/B,AIAAA,APTrB,CFQQ,CeFN,AFAA,AXNoC,CaM3C,AxBDH,AsBCG,AbE6B0B,ETHS,AcItB,AIAA,EJAiB9B,AIAAA,ATDA,CeFP,AFAA,AbEQ+D,CeHpC,AFAA,GEEE/E,AFAAA,CREgB,AIAA,ATDa,CKC7B,AIAA,ATDwC6G,CAAC,GAAG,CeDrC,AFAA,AREsC,AIAA,ATDAzC,CeDrCjD,AFAAA,AbCsC,GKC9C,AIAA,ATDiDkF,CAAL,CeDrC,AFAA,EEAQ2C,AFAAJ,CRGX3F,AIAAD,ATFkD+D,CAAV,EKErC,AIAA,CTFmD3C,CAAlB,CKE9BjD,AIAAA,CMHH,AFAA,CEAP,AFAA,AbC8D8F,EAAjC,CeDF,AFAA,ARGvB,AIAA,ATFS,CeHnB,AFAA,AbGE,EeDkC,AFAA,CRGVhE,AIAAD,GJAG,AIAA,KJAK9B,AIAAA,SJAR,AIAA,IJAqBC,AIAAA,KJAK,AIAA,IJAIA,AIAAA,KJDlD,AIAA,CJAJ,AIAA,EJC+D,AIAA;A5BF/D,AECD,ACEU,AKDX,AyBFI6H,ACAFA,AxBFJ,AqBEMJ,ACAFA,AfGD,AOAG3F,ACFD,APEF,AUAGD,ARFF,ASDJ,ARPAhC,AFQI4F,AkBAD,AvBEH,AwBJF,AGIC,EpBVC5F,IaOIgI,AFAAJ,AbCAhC,ALEAzC,ENDE/C,AyBFA4H,AFAAJ,APGA3F,AIAAD,APVA,ClBUgBpB,AOLfwB,AmBEA,ASDAnD,ClBEC,ASDAJ,AfGA,CUAC,AIAA,ARFAsB,ASDF,ARPEqB,ErBOEnC,AQEA,AEJA,AmBEAP,AfGA,CXAE,A+BHD,AxBFAkB,AsBEA,ARGAG,AIAAA,ACHL,AfGP,CdHI,AGGwB,A0BH5B,ASDF,C9BGgB,AyBFA,AFAA,AXCA,ANEA,AwBJAT,C9BGC,A0BFAS,AFAAA,AbCA,AmBFjB,CnCIiCH,AKD7B,AWDcK,CcDCF,AFAAA,APGX,AIAA,ARFWF,AkBFA,C5BDN,CcKQ8G,AIAAI,CMHf,AxBFgB9E,AsBEhB,CXPiB,AFQN,ChBEF,A8BHP,AFAA,AVPgB5B,CFQCoF,ChBEgB,AiBFf,ADAT,CCAU1F,CCRhB,AFQiB+F,CKEC,AIAA,APVA,GGUG9F,AIAAA,ARFN,EAAQ,CDAjB,CCAmBA,CIE5B,AIAA,ATF6B+F,ETHxB,EAAmBxF,AUGN,EAAiBX,EDA1B,ETHJ,ASGkChB,ETHPmD,AUGd,CAAhB,ACR2BnC,GXKxB,CAAX,ASGe,CCAsC,ADAjD,CERuB,EAAgBC,CDQnC,IAAqD,CAACE,CCRnC,CAAlB,CAAT,EDQmE,GAAG,CAACA,KAAV,KAAoBA,KAA7E,EAAoF;ApBArF,AECF,ACED,A8BHMwH,ACAF1F,AxBFL,AqBEO0F,ACAF3F,AfGH,AOAI,ACFF,APEF,AUAI,ARFC,ASDP,ARPC,AFQG,AkBAF,AvBECiB,AwBJF,AhCEE,IQEAA,CdbK,CkCUHhB,AFAAD,AXPA,ElBUErB,A8BHAgH,AFAAA,AVPAvE,CaOC,AFAA,AXPA,APUA,AwBJA1D,AhCEA,CgCFC,CAACT,CJCCmB,AFAAA,AXPAJ,APUA8B,CRFC3B,CHEC,AiBFAA,CaDC,AFAA,CjBGC,CXAC,A+BHX,AFAA,AlBGWmD,AwBJf,CLCgB,AFAA,AVPA,AfQd,CcAI,ACRWrE,EPUP,CmBHJ,AFAA,AjBGcgE,ARFAjD,EHEEA,CkBVlB,CAAJ,CPUyB,COVC,AfQxB,EHE0B,AWAAmD,ARFA,CHECnD,GWAnB,CAAR,EXAiC,CAACf,MAAP,GAAgB,CAAjB,CAAb,KAAqC,UAArC,IAAmDyB,OAAO,CAACV,MAAM,CAACa,GAAP,EAAD,CAAzE;AaRa,AhBMXrB,AGGFQ,AKFE,AyBDG,ACAF,AHAE,ACAF,ARGA,ACFF,AGEE,ARFE,ACRL,APUEkD,AwBJH,AhCEK,AmCENiG,EtCAEnJ,EHHER,AcGA0D,EOVE,CAACsD,AoBUA,CtCAC,AkBVA,APUA,A2BAAvC,CzCHC,AQCA,CFAC,CNDC,AGGAjE,AkBVA,APUA8B,ARFA3B,AmCEX,CpBVYqG,AoBWV,CjCHWrG,AaRP,EPUS,CAAC4D,ARFA,CHEC,CAACjD,AKFd,AaRc,CAAZ,AfQab,CUPO,ChBMNpB,AGGT,AWAA,CdHA,AGGW0B,AKFAP,AMEAkD,COVCE,CrBOAhE,AqBPC,AoBUxB,CzCHW,CcGe,ARFA,AmCIxB,CzCLwBC,AqBPC,AfQAc,CEAvB,AaRF,CrBOS,AcGkBgD,CXAlB,AKFmB,AaRA,CrBOA7D,AGG5B,CGFwB,CNDf,AcGA,CAAP,ARF8B,CNDA,CMCEc,CeRC,IfQX,EAAiBJ,ImCIlCoJ,EnCJiB,CAAhB,KeR+BpJ,AfQc,IAA7C,EeR2B,CAAP,CfQiC,CAACG,AmCI9D,EAAiBT,CAAC,EnCJiD,EmCI7CA,CnCJgD,AmCI/C,CnCJgDS,AmCI/C,CAAD,CAAvB,CAFF,EnCF+D,KAAoBA,KAA7E,EAAoF;A0CF1F,AhCJE,AhBMI,AEAJ,ACGA,AKFI,AyBDD,ACAF,AxBFI,AqBEF,ACAF,AfED,AOCC,ANDD,AUCC,ARFE,ACRH,AFQE,AkBDF,AvBGEyD,ARFIjC,AmCKRwH,I3BHIvF,EkCLE0G,AhCJAnK,AKDAqG,CAAC,AoBaA,CtCHCzF,AGFAY,AmCKAsC,CvCNClE,AQFOyC,AOIPP,ACAAD,AmBFAT,AvBGA,CkCLC,AhDEAlC,AQCA,AWAA+G,CHPC,AROAjG,AaRA,AFQA,AsBKX,CzCNY,AiBEV,ACAA,AGTA,AgBOA,AvBGU,A2BIV,COTW,A1CGA,CUPCkC,AdMZ,AmBPY,AFQAhC,ChBEC,CHHC,AQCA,AEHT,AIKSG,ARFAL,CIHQH,CPKNA,CKFCC,AWAA,CnBDb,AmBCc4F,CERC,AFQF,ALEP,ARFS,CNDCxG,AmBClB,ALEkB+D,CJLf,AIKgB,CdHC,AGGA,AGFAxB,AmCKxB,CtCHyBd,AOLOH,CFGN,AMEAmB,A2BKxB,CzCRyB,AQCA3B,CRDL,AGGJ,AGFV,CHEqBlB,CWAC,CET5B,ANIK,AIKwBqE,CNFL,CwCH1B,AtCAwC,CFGN,CLEhB,AWAQ,CXAxB,AKFkClD,AEHO+B,AIKPe,GOVXlD,CXKlB,AIKiC,CNFd,CEHuB,CFGNA,AMEAiD,EOVtB,CAAP,CoBeLmG,C3BL2B,CNFV,CAAhB,CMEyC,CAAzB,CAAd,CAAR,CNFmD,IAAjD,EAAuD,GiCO3D,EAAiB1J,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAvB,CAFF;AONA,AhCNE,AhBOI,AEAL,ACGC,AKFM,AyBDL,AvBFD,AqBEC,AdEF,AQFC,APED,AEDE,ACRD,AFQE,AkBDH,A/BCOkC,G2BbN,AFAA,GiBWI2I,AhCLA7F,ASMA3E,AJPAqD,CAAJ,ClBUMpC,AgBFAK,AbAAO,CHEC,A8BHA,AvBFAQ,AqBEA,AZCA,C6BFC,AhDCA9C,CyBAR,CTNU,AhBMA,AGGAU,AKFAgC,AWAA7C,AbAA,C0CDV,AtCFW,AeEA,CfFCa,CMJC2E,AROA,CRDC,AmBCZ,AbAYhD,EHEE,CAAC1C,CHHb,AQCciB,AEHP,AeEOqB,CnBCC,CNDCjC,AUFAkB,CeEC,CzBAC,AMCA,CHEZ,CsBHcT,AnBCAA,CNDClB,AUFA,CVEC,AGGA,AOLA4B,CVECxB,AGG3B,AKFM,CQRN,CRQ6B,AiBDlB,AnBCL,CIHK,EAAqB0B,CVEZ,KUFT,EAA6BwB,IAA7B,CAAX,6EsCCF;AhCNE,AbWA,AKFQ,AyBDN,ACDF,AxBDD,AqBEG,ACDF,ARGA,ACFD,AGEC,ARDD,ACTC,AFSE,ALCA,ARDIZ,AmCQD,MzBfDqD,AKDAvD,CAAC,ClBUCjB,AgBFAY,AbAAO,C2BDC,ACDAU,AHCA,ACDAD,ARGA+E,AIAAI,ATDA,AsBQOkC,CpBhBN,CAACjG,APSA,ARDA,C4BFT,AFAA,AXNU,AFQA5D,ChBEC,AWDA6B,CNDClB,AMCH,CERI,AiBMAA,AFAAA,AVPA,AfQAwB,CHEC,AkBVN,CGSR,AIAA,ATDE,ALCayB,CERCyB,AFQd,CNDe,CLECrE,A8BHhB,AFAA,AVPgBgG,APSA5C,ARDA,CeTlB,EbSqBzD,CyBDCH,AFAAA,AzBCAG,CHER,AWDS,CXCCa,AWDAK,CXCC,AWDF,CNDf,AMCU,CRDS,AmCQtB,CtCNuB,AKFAW,AyBD1B,AFAA,AUSiCsH,CtCNrB,AWDe,CmBFC,AFAA,AjBEArG,ARDArB,CHECX,AKFA,CQT/B,ERSkCgB,AFAhB,AmCQb,CtCNS,AWDqB,ARD7B,CHE8B,AsCMO,CtCN7B,AKFuB,CLErC,AWDsCZ,CAAT,CNDWlB,GMCGgD,ENDf,EMCV;AkCDpB,AhDDM,AGIJ,AKFO,AyBDH,ACDL,AHCK,ACDL,ARGA,AIAA,APXC,AFWEkD,ALAD,ARDI,AmCQL,G3BZA,CKKEA,EETEI,ElBUEvF,AkBVA,AFSA,AsBOAb,CjCVA,AWGCA,ALAA,CmBFCsH,AFAAA,CVPC7F,ErBMEzC,AyCUA,CtBPL,C6BFOmL,AhDDA,AGIA,AKFA,AaRA,CAACzG,AFSA5E,AsBOA,CRTC,AFAA,C/BDCG,AGIA,EHJZ,AGIJ,A8BFUN,AFAAA,AZCJ,AsBOYuK,CpBhBT,CrBMW,AqBNAlI,AFSAwE,CETX,AFSH,CEXN,AFWE,E6BFJ,CfCmB,AFAA,CEAC1F,AFAAA,CiBDS,EPSb,CAAgBmJ,CRRb,AFAA,EEAQrH,AFAAD,GEAR,AFAA,AUQH,CRRJ,AFAA,AUQV,GRRgC,AFAA,CEDjB,AFAA,GEELhD,AFAAA,OEAO,AFAA,CEACmB,AFAAA,KEAD,AFAA,EEAQA,AFAAA,KEAR,AFAA,CEAP,AFAA,KEA0B,AFAA,CEFhC,AFAA,EEEmC,AFAA;AiBDvC,AhCNA,AhBKM,AGIN,AKFQ,AyBCF8B,AvBJR,AqBIQD,AVZN,AFYE,ALAAiB,ARDC,AmCSH,I3BREA,EXCEjC,AkBVA0F,AoBiBA8C,CtCPC,C8BDCvH,AFAAD,AZAAhD,C6BFCyL,AtCFArI,AIIA,CXCC,CaTC0C,AbSL,A8BDK,AFAA,C/BHCvF,AqBNA,APSAuC,CJJZ,CsCEc,AxCCAE,AyBCA7B,AvBJAH,AqBIAG,AUQA,COVE,AhDDD,AGIAY,AkBVA,AFSA,CAACV,ALAA,CNDC,AMCA0D,A2BQA,COVCwG,AhDDAlL,CiCGV,AFAA,AUQN,CzBhBA,AhBKkB,AQEAc,AEHpB,CMJqB4E,AGQA,C6BFE,A7CGD,AOLAjE,ASIAtB,ALAV,CdHWF,AGIA6B,AWDA8B,EERrB,AhBKgB,AQER,AEHV,EMJ2B,AbSZ,AKFYjB,AEHArB,ASIN,ChBCOL,AgBDb,ALAa,EdHE,AQEA,AWCA8F,CnBHtB,AmBGO,ALAgBjD,CKAvB,ChBCO,AKFkBhD,AEHjC,AWLmB,ClBUjB,COLiCgC,ASIA,ALAvB,CXCwB,AgBDhC,ALAA,ENDuB,AWCWkE,CTJtC,EAAyC,CSIC,ChBCCnF,AgBDAb,E6BF7B,CAAL,CACJqK,C7BCqC,EhBCN,AgBDcvL,C6BFzC,CACCwL,E7BCgC,EAAcnL,GETzBQ,C2BQb,C7BCwB,CAAJ,E6BDhB2K,C3BRH,EAAoBlE,EAApB,EAAwBE,C2BQb,CAACiE,M3BRZ,CAAiC,CAAjC,EAAoCnE,C2BQjC,C3BRmC,C2BOhD,EAEJiE,A3BTuD,CAAzC,CAAJ,CAHb,C2BUO,CAECpB,MAAM,IAAI,gCAAiBA,MAAjB,CAFX,CAAP;AAGD,AhCRG,AhBKI,AQEE,AyBCF3B,AvBJN,AqBIMA,AVbN,APaEzE,ARDD,IQCCA,EOTE0D,ELCE,AiBQAe,AFAAA,AjBAA,CERCnH,ANIC,EIICsB,CdHC9C,AqBNA,ELCE,AROAiD,CQPC+C,AiBQA,AFAA,AVTA,APSA,CAAC1B,CNDC,CyBCC,AvBJCb,AqBID,C/BHC,CAAC5D,AQEAsB,AMCT,CdHU,AcGA+C,CERZ,AhBKa3D,AiCGd,AFAA,CfRewF,EhBKF,AQEX,AEHA,AIIe,CdHN,AUDQ/E,CMJlB,AROkBiC,CQPvB,AhBKwB7C,AcGA+D,CdHT,CgBLW4B,AhBKlB,AQEkB,EEHpB,AIIC,CdHsB,AQEA5E,AaRdH,APSf,CER8B,AhBK1B,AUD2BqB,CAAzB,CVC0B/B,CgBLCkB,ANIC,CVCA,AQEX,CaRF,CAACmG,CrBMepH,CgBLC,CAACkB,ChBKP,CAA5B,EgBL6B,CAAWsE,AKD7B,CAAgB0B,CrBOtBpH,CqBPwB,CLCA,AhBMtB,CgBNe,CKDU,CrBOtBE,AqBPC,CAAJ,CAJb,CrBWmB,GAAG,CAAX;AgBJT,AhBKG,AGEL,AKDO,AyBCF,AvBJH,AqBIG,AVTL,AFSE,ALAAqE,A2BQF,I3BREA,G2BQG,CzBfCvC,ANGAA,CMHJ,AbOK,AOJA,AWLAqF,APSA,EKAErF,AsBQAA,CtBRC,ALAA,A2BQA,CtCRV,AOJWc,EPIE,AkBTA,AFSAnB,AsBQA,CtBRX,ALAYR,A2BQd,C/BZe,CAACvB,AWLA,AFSA,AsBQAoC,CpBjBCuF,AoBiBA,E3BRP,CAAUxD,A2BQA/C,C3BRC,CJJnB,CWLqB,CXKC,AIIAyB,C2BQC,CpBjBC4E,AoBiBAzH,E3BRE,CAACqE,EJJE3C,CWLf,AoBiBhB,C3BRwB,CAAUsC,A2BQA5B,CAAC,E/BZE,AWLAA,CXKCrB,AWLA,CPSC,A2BQA,CAAvC,CpBjByCyG,CPSCvD,A2BQA,CpBjB1B,CXKqB,AWLrC,CXKwB,CIIU,GAAe,CAAzB,CAAd,CAAR;AkCCJ,AhCRI,AbQAhC,AKDG,AyBCF,AvBJD,AqBIC,AVTJ,AFSKmF,AbFJ,AmCUE,ItCRAnF,EgBAEmF,AbFAtG,EULEqD,CAAC,CNGCd,ASIA,AsBQA,CtCRC,AgBAAjC,AbFA,AmCUAoJ,CzBfC1E,AbOA3D,EGFE,C0CECyJ,A1CFb,CULc,AbOZ,AOJY,ASIN,CHPO5L,AbOAmB,AGFA,CaECiB,CTJC,ASIT,AsBQA,EtBRWL,AsBQA0I,CtCRC,AgBAZ,CHRN,AbQmB5I,AOJA4B,ASIjB,CbFkBnB,C0CExB,A7BAyB,C6BACuJ,A7CAT,AOJE,CPIQ,AgBAAzJ,AbFA,CHECL,AOJxB,ASIE,ChBAqB,AsCQjB,CtBRoB,ChBACK,AGFAtB,AmCUA4J,CtCRJ,AgBAK3I,CAA1B,C6BAN,EAAoC,A1CFA,CHEChB,EGFE,CAAZ,CAAV,AmCUP,EtCRiC,CAACqB,CAAD,AsCQE+H,CtCRR,CAAUpI,CAAV,CAApB,CAAb,asCQkDX,KAAK,CAACgB,CAAD,CAAd,CAAzC;AOPF,AhCTE,AhBME,AGGF,AKDC,AyBCF,AvBJC,AqBID,AjBDC,ARDH,AmCUG,QzBfIjC,AbOAiC,C6CAC,AhCTL,AbSK,COJCsB,A+BYA,C3BTC,A2BSAiH,CtCRC5I,C6CAC+J,AhDHA1L,AGGT,AWDSgC,CAAF,CdFL,AUDS,EIGE+B,A2BSP,C/BZQjB,AIGd,C2BSe0H,CORV,AlCDWjG,CkCCCoH,CtCJC,CAAC3J,CAAC,CIGC,A2BSf,C/BZY,AIGIA,CJHtB,AIGqB,A2BSEyI,CORC,AlCDR,GAAW,CkCCC,AlCDA7G,G2BStB,E3BT2B,E2BSEmG,C3BTC/H,CAAT,IAAc8B,IAAzB,Q2BS4B9C,KAAK,CAACgB,CAAC,GAAG,CAAL,CAAd,CAAnC;AOPA,AhCVA,AhBOC,AQEF,AEHC,AWLG,AFQD,ALAH,A2BSC,QzBfIrB,ANGAI,CWLQyG,C2BSNoE,APQAlL,G/BZG,ASGAf,CHNC,CgCOC,APQA,C/BZC,CMHC,ANGA,CsCIC,AtCJd,A+BYcqB,EtBTE,CHNCG,AGMAH,C6BCC6K,C3BTf,AoBiBgB,CpBjBQlL,AoBiBPqB,CAAC,CzBfR,AGMS,C6BCR,AhCPS+B,AGMA/B,CHNV,AGMS,AsBSE,CORxB,AhCVA,AGSgB,AsBSG,COTS,A3BRzB,AoBiBH,COPA,A7BF2B+E,AsBMa,CpBdLI,AFQnB,AsBUhB,CpBlBG,AFQM,EER6BvG,CFQN,CAA9B,EAAiC,EAAEoB,CERQ,AFQV,GERayF,eAA7C,EAAqD;ArBdnD,AGuBL,A8BAF,AFAA,AVRA,AoBkBC,GzCjCD,GqBeI,EAAE1D,CYQCnB,AFAAD,AVRA,ElBQE,C8BAT,AFAA,AVRUhC,ClBQCI,KAAK,AkBRA,ClBQCiB,AkBRApC,ClBQD,CAAP,IkBRL,ClBQoB8B,AkBRxB,EAA0B,KlBQK,CAACM,CAAD,CAA7B,EAAkC;A6CElC4J,AhCPA,AhBIH,AGEK,AKDJ,AyBCD,AvBJG,AqBIH,AVRC,AFOI,ALCJ,IkCCEA,E3BTE,APQAtH,CORC6C,CAAC,C2BSC,AhCPAnF,ARKA,AEHA,CsCKC8J,AhCPA,AbMA9J,AKDAW,CLCC,AkBRA,CAACwE,C2BSR,AhCPS,ARKJ,AaPH,AFOOxH,ALCX,CENE,CRKWiD,AEHA9B,AIIAyD,CkCCCkH,AhCPAzJ,AbMA,CaNC,AbMX,CKDG,AaPS,ClBQC,AKDjB,AaPI,CLEc+B,ANEhB,ASGgB,ALCA,CENhB,AGKiB/C,ALCAsD,EENE,AKFAP,C2BSnB,AtCLoBpD,AWJA,CLECqB,CAArB,AbMsBV,AgBDA,CEPC,AFOAK,CHLC,AKF1B,AFOwB,ALCX,CKDK,CTHhB,AWJ0B,CFOCoF,ChBCC,AOJA,ASGZ,CAAP,EhBCsBlF,CgBDC,CEPC,AFO/B,CEPgCjB,CFOC,EAAEe,ChBCC,AgBDH,ChBCIF,EkBRE,ClBQV,AkBRWd,ClBQCW,KkBRK,ClBQjB,AkBRkB,ClBQrB,AkBRoB,CAAP,ElBQYO,AkBRA,CAAZ,EAAelB,IlBQzC,EkBR0B,CAAf;A2BU1BiL,AhCPEjL,AbMAI,AKDL,AEHK,AWJJ,AFOG,ALEH,A2BSAoJ,EAAAA,EOTEyB,EhCPEjL,AbMAI,AkBRAoG,CAAC,E2BSE,AlCAA5C,CkCACwH,APSA,CtCVC,AkBRA,CLEC,AbMA/J,AOJAuB,AWJV,CLEWvB,AbMA,AsCUA,CzBhBD,AKFE,APSZ,CEPI,AbMK,AOJI,A+Bcb,CtCVI,EaNYlB,ANEAwC,CPIC,CAAb,C6CCF,A3BTiB,CAAC1C,CLEC,ANEA,CsCKC,AhCPA8E,ANEA5E,EsCKpB,EhCPwB,CAACkB,ANEN,AWJM,CLED,AKFErB,CLEP,ANEQ,EMFEqB,ANEAjB,CMFV,EAAa2E,AKFA,CAAC3B,CXId,AWJe,ELEf,ANEiBpD,CMFlC,AKFmC,CAAL,CAAP,EAAgBoD,CXItB,AWJuB,CXIxC,EWJ2C,CAApB,EAAuBpD,MAAvB,CAAf;ALGT,AhBIL,AGEK,AOJC,AWJJ,APSD,A2BSC,MpBlBIoD,AoBkBA2G,CpBlBJ,ErBMO7K,GUFGgD,G+BcG,E/BdE,C+BcC,E/BdEI,A+BclB,M/BdwB,CAACO,CVE3B,CAA6BpD,CAA7B,AUFoB,CAAWmD,CVEC,EUFZ,CAAd;AsCKFqI,AhDFF,AGEC,AOJG,AWLJ,AFQE,I6BCAA,E3BRE5J,CAAC,CFOCrC,C6BCC,AhDFA,CgDECqM,AtCJAnJ,AWJA,CAACkB,CAAC,GXIN,AWJS,AFOA,C6BCX,A3BRM,AFOM/C,CTHC6B,EsCIE,AhDFDxC,CAAT,AqBNW8G,CADlB,AFQmB,CnBDApH,AUFC,ASGAD,CnBDb,AUFciC,EsCIE4J,AhDFD,CmBCH,CTHJ,ASGF,CTHa7K,CSGCiG,CAAd,CAAP,C6BCwB,CAACkE,AtCJhB,EAAX,CSG8B,C6BCC,A7BDjC,C6BCkCgB,C7BDCjF,CTF5B/D,GSEgC,CAACjC,C6BCX,CAAa,AtCH7B,CAACyC,ESEyB,CTFhC,CAAWF,ASE6BzD,GTFxC,CSEgC,CTFhB,CAACgB,ASE6Ba,CAAd,CAAJ,CAAnC,ETFuB,CAAhB,ESGF,EAAEA,CAAF,EAAKqF,IAAI,CAAChG,KAAD,EAAQW,CAAR,EAAWxB,KAAX,CAAT;A6BAuCuF,AhCL5C,AhBIA,AGEH,AOHI,AWPH,AFWE,ALAG,A2BQLqE,MOV8CrE,A3BP1C0B,ELEExB,AKFA,AFSAjE,CAAC,ALAO6C,CkCFoC,AhCL1C,ChBIC,AqBNA/B,C2BO2CmJ,ChCLzCvG,AGOAmB,CAAT,CETW,CAAC9B,AFSA5E,C6BF8B,EhCL3B,CAACa,AGOA,AsBQTgK,CpBjBA,CAAW3I,APSf,COTI,AFSYL,ALAOiC,COX5B,AFWsB,EHPL,CAAf,AGOuB,AsBQzB,CtBRc,ALAT,A2BQY,CAAC,C3BRiBC,A2BQhBwF,GAAD,C3BRb,CdHcjJ,AyCWKkJ,CzCXJ,AcGqB5I,CdHpBL,CAAD,AyCWF,CzCXT,CyCWoBiK,CzCXJvK,AcGpB,CdHI,CAAP,AcG8C,O2BQ9B,CAAD,KAA4B;AOVcmM,AhCLzD,AhBKD,AqBTD,AFYE,ALAF,A2BQE,GzCbF,GgDE2DA,A3BNvD7E,APSAvD,EEPE+B,AGOAW,CAAC,CHPC,AFOA,A2BQAhH,COXwD,APWvD,CpBjBC,C2BMwD,AhCJvDoG,AGOAjE,ALAA,CKAT,ALAUkC,A2BQAuF,CzBfC,AKFA,CLEC,AKFAxI,AFSAT,CHPD,CADX,AFQc,GKAG,ALAAyD,A2BQA,CAACyF,CpBjBC,CAAC1I,AFSAgB,CAAC,AsBQJ,C3BRR,C2BQc2H,CtBRC,CAAZ,CETc,APSA7G,A2BQT,CpBjBU2E,AoBiB3B,EpBjB0B,CAAP,APSW,CAACxE,COTCwE,EAAb,APSO,CAAS,COTCzG,APSV,EAAYD,IOTnB,CAHrB,APY4B,CAA5B;AkCH4C,AhCL1C,AhBMH,AUFG,AWRF,AFaC,ALDD,KkCH+B,CAAD,A3BL1B6G,APSA5C,CkCJF,ChCHImB,CNEC,CMFC,CFOC,COTC,CLECF,CFOCnD,CEPC,ANEA,AWJA,CLEC,ANEAc,AWJA3C,CLED,CAFX,AFSc,CJLH,AIKI8D,EJLE/D,EWJE,CAACA,APSV,CAAW8B,EJLV,CAAX,CIKyB,COTC,APSAmC,COTCwC,CXICnE,CWJC,APSR,CAASa,EOTE,CAAN,CXI1B,AWJmB,APSE,EJLe,AWJAsD,EAAE,APSA3E,GOTG,CAAtB,APSuB,CAACoC,COTClE,GPSlC,CADZ,EORqB,CAJrB;A2BUC,AhCNC,ANKEsC,AWJJ,APOA,A2BSE,GOjBK,CAAP,EtCKIA,AIKA6B,EEPEiB,AyBcAvG,CpBhBC6H,AoBgBL,CzBdM,CFOC,A2BOA,C/BZC,CMFC9B,ANEA9B,CIKCK,COTC,CXIT,CAAWP,CWJC,APSA,COTCgE,CXIb,CIKe9E,CEPC,ANEAW,CMFCzC,EKFE,APSA,CAACoE,EOTEsC,CLEN,ANEO,AIKR,CJLS1G,AIKA,CEPCkF,CFOV,CEPC,CKFJ,APSgBlB,CEPCmB,CNEN,CMFP,CAHlB,ANKkC9D,CMjBX,AN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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["module.exports = [\n\t[\n\t\t116.585,\n\t\t40.0801,\n\t\t0\n\t],\n\t[\n\t\t28.8146,\n\t\t40.9769,\n\t\t0\n\t],\n\t[\n\t\t121.805,\n\t\t31.1434,\n\t\t1\n\t],\n\t[\n\t\t-79.6306,\n\t\t43.6772,\n\t\t0\n\t],\n\t[\n\t\t-73.7408,\n\t\t45.4706,\n\t\t0\n\t],\n\t[\n\t\t121.336,\n\t\t31.1979,\n\t\t1\n\t],\n\t[\n\t\t120.374,\n\t\t36.2661,\n\t\t1\n\t],\n\t[\n\t\t106.3327,\n\t\t27.8164,\n\t\t1\n\t],\n\t[\n\t\t-118.408,\n\t\t33.9425,\n\t\t0\n\t],\n\t[\n\t\t-73.7789,\n\t\t40.6398,\n\t\t0\n\t],\n\t[\n\t\t114.208,\n\t\t30.7838,\n\t\t1\n\t],\n\t[\n\t\t113.299,\n\t\t23.3924,\n\t\t1\n\t],\n\t[\n\t\t-77.4558,\n\t\t38.9445,\n\t\t0\n\t],\n\t[\n\t\t151.177,\n\t\t-33.9461,\n\t\t0\n\t],\n\t[\n\t\t123.483,\n\t\t41.6398,\n\t\t1\n\t],\n\t[\n\t\t118.8736,\n\t\t34.5717,\n\t\t1\n\t],\n\t[\n\t\t103.947,\n\t\t30.5785,\n\t\t1\n\t],\n\t[\n\t\t117.216,\n\t\t36.8572,\n\t\t1\n\t],\n\t[\n\t\t-122.375,\n\t\t37.619,\n\t\t0\n\t],\n\t[\n\t\t120.9872,\n\t\t37.6572,\n\t\t1\n\t],\n\t[\n\t\t38.7993,\n\t\t8.9779,\n\t\t0\n\t],\n\t[\n\t\t51.1522,\n\t\t35.4161,\n\t\t0\n\t],\n\t[\n\t\t113.811,\n\t\t22.6393,\n\t\t1\n\t],\n\t[\n\t\t102.9292,\n\t\t25.1019,\n\t\t1\n\t],\n\t[\n\t\t55.3644,\n\t\t25.2528,\n\t\t0\n\t],\n\t[\n\t\t113.22,\n\t\t28.1892,\n\t\t1\n\t],\n\t[\n\t\t73.5291,\n\t\t4.1918,\n\t\t0\n\t],\n\t[\n\t\t28.7519,\n\t\t41.2753,\n\t\t0\n\t],\n\t[\n\t\t-89.9767,\n\t\t35.0424,\n\t\t0\n\t],\n\t[\n\t\t31.4056,\n\t\t30.1219,\n\t\t0\n\t],\n\t[\n\t\t136.407,\n\t\t36.3946,\n\t\t0\n\t],\n\t[\n\t\t54.6511,\n\t\t24.433,\n\t\t0\n\t],\n\t[\n\t\t103.994,\n\t\t1.3502,\n\t\t0\n\t],\n\t[\n\t\t8.5706,\n\t\t50.0333,\n\t\t0\n\t],\n\t[\n\t\t120.434,\n\t\t30.2295,\n\t\t1\n\t],\n\t[\n\t\t51.6081,\n\t\t25.2731,\n\t\t0\n\t],\n\t[\n\t\t108.752,\n\t\t34.4471,\n\t\t1\n\t],\n\t[\n\t\t138.531,\n\t\t-34.945,\n\t\t0\n\t],\n\t[\n\t\t2.55,\n\t\t49.0128,\n\t\t0\n\t],\n\t[\n\t\t103.62,\n\t\t36.5152,\n\t\t1\n\t],\n\t[\n\t\t109.294,\n\t\t21.5394,\n\t\t1\n\t],\n\t[\n\t\t-123.184,\n\t\t49.1939,\n\t\t0\n\t],\n\t[\n\t\t174.792,\n\t\t-37.0081,\n\t\t0\n\t],\n\t[\n\t\t12.2389,\n\t\t41.8003,\n\t\t0\n\t],\n\t[\n\t\t119.663,\n\t\t25.9351,\n\t\t1\n\t],\n\t[\n\t\t4.7639,\n\t\t52.3086,\n\t\t0\n\t],\n\t[\n\t\t79.8841,\n\t\t7.1808,\n\t\t0\n\t],\n\t[\n\t\t11.6903,\n\t\t48.1378,\n\t\t0\n\t],\n\t[\n\t\t50.0467,\n\t\t40.4675,\n\t\t0\n\t],\n\t[\n\t\t172.532,\n\t\t-43.4894,\n\t\t0\n\t],\n\t[\n\t\t153.117,\n\t\t-27.3842,\n\t\t0\n\t],\n\t[\n\t\t144.843,\n\t\t-37.6733,\n\t\t0\n\t],\n\t[\n\t\t106.642,\n\t\t29.7192,\n\t\t1\n\t],\n\t[\n\t\t113.841,\n\t\t34.5197,\n\t\t1\n\t],\n\t[\n\t\t-3.5626,\n\t\t40.4719,\n\t\t0\n\t],\n\t[\n\t\t122.362,\n\t\t29.9342,\n\t\t1\n\t],\n\t[\n\t\t-9.1359,\n\t\t38.7813,\n\t\t0\n\t],\n\t[\n\t\t37.4146,\n\t\t55.9726,\n\t\t0\n\t],\n\t[\n\t\t24.9633,\n\t\t60.3172,\n\t\t0\n\t],\n\t[\n\t\t16.5697,\n\t\t48.1103,\n\t\t0\n\t],\n\t[\n\t\t2.0785,\n\t\t41.2971,\n\t\t0\n\t],\n\t[\n\t\t-0.1903,\n\t\t51.1481,\n\t\t0\n\t],\n\t[\n\t\t110.459,\n\t\t19.9349,\n\t\t1\n\t],\n\t[\n\t\t130.2706,\n\t\t30.7847,\n\t\t0\n\t],\n\t[\n\t\t8.7281,\n\t\t45.6306,\n\t\t0\n\t],\n\t[\n\t\t101.71,\n\t\t2.7456,\n\t\t0\n\t],\n\t[\n\t\t4.4844,\n\t\t50.9014,\n\t\t0\n\t],\n\t[\n\t\t109.412,\n\t\t18.3029,\n\t\t1\n\t],\n\t[\n\t\t-2.275,\n\t\t53.3537,\n\t\t0\n\t],\n\t[\n\t\t126.25,\n\t\t45.6234,\n\t\t1\n\t],\n\t[\n\t\t60.8027,\n\t\t56.7431,\n\t\t0\n\t],\n\t[\n\t\t6.109,\n\t\t46.2381,\n\t\t0\n\t],\n\t[\n\t\t44.2346,\n\t\t33.2625,\n\t\t0\n\t],\n\t[\n\t\t92.4933,\n\t\t56.1729,\n\t\t0\n\t],\n\t[\n\t\t103.813,\n\t\t13.4107,\n\t\t0\n\t],\n\t[\n\t\t77.0405,\n\t\t43.3521,\n\t\t0\n\t],\n\t[\n\t\t82.6507,\n\t\t55.0126,\n\t\t0\n\t],\n\t[\n\t\t71.4669,\n\t\t51.0222,\n\t\t0\n\t],\n\t[\n\t\t103.637,\n\t\t10.5797,\n\t\t0\n\t],\n\t[\n\t\t114.1981,\n\t\t22.3203,\n\t\t0\n\t],\n\t[\n\t\t-149.996,\n\t\t61.1744,\n\t\t0\n\t],\n\t[\n\t\t117.346,\n\t\t39.1244,\n\t\t1\n\t],\n\t[\n\t\t98.3169,\n\t\t8.1132,\n\t\t0\n\t],\n\t[\n\t\t135.244,\n\t\t34.4273,\n\t\t0\n\t],\n\t[\n\t\t140.386,\n\t\t35.7647,\n\t\t0\n\t],\n\t[\n\t\t6.2044,\n\t\t49.6233,\n\t\t0\n\t],\n\t[\n\t\t100.747,\n\t\t13.6811,\n\t\t0\n\t],\n\t[\n\t\t88.4467,\n\t\t22.6547,\n\t\t0\n\t],\n\t[\n\t\t104.389,\n\t\t52.268,\n\t\t0\n\t],\n\t[\n\t\t127.412,\n\t\t50.4254,\n\t\t0\n\t],\n\t[\n\t\t72.8679,\n\t\t19.0887,\n\t\t0\n\t],\n\t[\n\t\t124.926,\n\t\t1.5493,\n\t\t0\n\t],\n\t[\n\t\t77.1031,\n\t\t28.5665,\n\t\t0\n\t],\n\t[\n\t\t122.376,\n\t\t11.6794,\n\t\t0\n\t],\n\t[\n\t\t90.3978,\n\t\t23.8433,\n\t\t0\n\t],\n\t[\n\t\t118.862,\n\t\t31.742,\n\t\t1\n\t],\n\t[\n\t\t7.1427,\n\t\t50.8659,\n\t\t0\n\t],\n\t[\n\t\t100.062,\n\t\t9.5478,\n\t\t0\n\t],\n\t[\n\t\t100.607,\n\t\t13.9126,\n\t\t0\n\t],\n\t[\n\t\t5.4432,\n\t\t50.6374,\n\t\t0\n\t],\n\t[\n\t\t115.9,\n\t\t28.865,\n\t\t1\n\t],\n\t[\n\t\t74.4776,\n\t\t43.0613,\n\t\t0\n\t],\n\t[\n\t\t136.805,\n\t\t34.8584,\n\t\t0\n\t],\n\t[\n\t\t56.0212,\n\t\t57.9145,\n\t\t0\n\t],\n\t[\n\t\t98.9626,\n\t\t18.7668,\n\t\t0\n\t],\n\t[\n\t\t104.844,\n\t\t11.5466,\n\t\t0\n\t],\n\t[\n\t\t113.376,\n\t\t22.0064,\n\t\t1\n\t],\n\t[\n\t\t112.388,\n\t\t34.7411,\n\t\t1\n\t],\n\t[\n\t\t80.1693,\n\t\t12.99,\n\t\t0\n\t],\n\t[\n\t\t116.4109,\n\t\t39.5099,\n\t\t1\n\t],\n\t[\n\t\t12.2364,\n\t\t51.4239,\n\t\t0\n\t],\n\t[\n\t\t127.4987,\n\t\t36.717,\n\t\t0\n\t],\n\t[\n\t\t118.128,\n\t\t24.544,\n\t\t1\n\t],\n\t[\n\t\t119.3244,\n\t\t35.405,\n\t\t1\n\t],\n\t[\n\t\t125.685,\n\t\t43.9962,\n\t\t1\n\t],\n\t[\n\t\t114.928,\n\t\t4.9442,\n\t\t0\n\t],\n\t[\n\t\t114.697,\n\t\t38.2807,\n\t\t1\n\t],\n\t[\n\t\t104.741,\n\t\t31.4281,\n\t\t1\n\t],\n\t[\n\t\t106.801,\n\t\t26.5385,\n\t\t1\n\t],\n\t[\n\t\t112.628,\n\t\t37.7469,\n\t\t1\n\t],\n\t[\n\t\t102.184,\n\t\t27.9891,\n\t\t1\n\t],\n\t[\n\t\t121.02,\n\t\t14.5086,\n\t\t0\n\t],\n\t[\n\t\t120.852,\n\t\t27.9122,\n\t\t1\n\t],\n\t[\n\t\t120.032,\n\t\t29.3447,\n\t\t1\n\t],\n\t[\n\t\t129.569,\n\t\t44.5241,\n\t\t1\n\t],\n\t[\n\t\t100.76,\n\t\t21.9739,\n\t\t1\n\t],\n\t[\n\t\t119.779,\n\t\t31.9197,\n\t\t1\n\t],\n\t[\n\t\t100.319,\n\t\t25.6494,\n\t\t1\n\t],\n\t[\n\t\t118.59,\n\t\t24.7964,\n\t\t1\n\t],\n\t[\n\t\t116.5033,\n\t\t23.552,\n\t\t1\n\t],\n\t[\n\t\t86.1289,\n\t\t41.6978,\n\t\t1\n\t],\n\t[\n\t\t121.539,\n\t\t38.9657,\n\t\t1\n\t],\n\t[\n\t\t106.3932,\n\t\t38.3228,\n\t\t1\n\t],\n\t[\n\t\t112.628,\n\t\t26.9053,\n\t\t1\n\t],\n\t[\n\t\t118.001,\n\t\t27.7019,\n\t\t1\n\t],\n\t[\n\t\t119.7198,\n\t\t32.5634,\n\t\t1\n\t],\n\t[\n\t\t109.485,\n\t\t30.3203,\n\t\t1\n\t],\n\t[\n\t\t120.429,\n\t\t31.4944,\n\t\t1\n\t],\n\t[\n\t\t117.298,\n\t\t31.78,\n\t\t1\n\t],\n\t[\n\t\t120.2031,\n\t\t33.4258,\n\t\t1\n\t],\n\t[\n\t\t114.93,\n\t\t40.7386,\n\t\t1\n\t],\n\t[\n\t\t121.462,\n\t\t29.8267,\n\t\t1\n\t],\n\t[\n\t\t127.6022,\n\t\t42.0669,\n\t\t1\n\t],\n\t[\n\t\t87.4742,\n\t\t43.9071,\n\t\t1\n\t],\n\t[\n\t\t102.043,\n\t\t36.5275,\n\t\t1\n\t],\n\t[\n\t\t108.172,\n\t\t22.6083,\n\t\t1\n\t],\n\t[\n\t\t111.824,\n\t\t40.8514,\n\t\t1\n\t],\n\t[\n\t\t105.393,\n\t\t28.8522,\n\t\t1\n\t],\n\t[\n\t\t114.3062,\n\t\t27.8025,\n\t\t1\n\t],\n\t[\n\t\t118.908,\n\t\t42.235,\n\t\t1\n\t],\n\t[\n\t\t109.391,\n\t\t24.2075,\n\t\t1\n\t],\n\t[\n\t\t117.5553,\n\t\t34.0591,\n\t\t1\n\t],\n\t[\n\t\t110.358,\n\t\t21.2144,\n\t\t1\n\t],\n\t[\n\t\t57.6836,\n\t\t-20.4302,\n\t\t0\n\t],\n\t[\n\t\t111.6412,\n\t\t36.1326,\n\t\t1\n\t],\n\t[\n\t\t114.6,\n\t\t23.05,\n\t\t1\n\t],\n\t[\n\t\t106.1626,\n\t\t30.7954,\n\t\t1\n\t],\n\t[\n\t\t117.6856,\n\t\t30.7403,\n\t\t1\n\t],\n\t[\n\t\t105.702,\n\t\t32.3911,\n\t\t1\n\t],\n\t[\n\t\t79.8649,\n\t\t37.0385,\n\t\t1\n\t],\n\t[\n\t\t107.603,\n\t\t35.7997,\n\t\t1\n\t],\n\t[\n\t\t58.2844,\n\t\t23.5933,\n\t\t0\n\t],\n\t[\n\t\t114.7789,\n\t\t25.8533,\n\t\t1\n\t],\n\t[\n\t\t111.48,\n\t\t30.5566,\n\t\t1\n\t],\n\t[\n\t\t118.899,\n\t\t28.9658,\n\t\t1\n\t],\n\t[\n\t\t119.825,\n\t\t49.205,\n\t\t1\n\t],\n\t[\n\t\t115.167,\n\t\t-8.7482,\n\t\t0\n\t],\n\t[\n\t\t100.246,\n\t\t26.68,\n\t\t1\n\t],\n\t[\n\t\t105.1545,\n\t\t37.5731,\n\t\t1\n\t],\n\t[\n\t\t113.278,\n\t\t29.314,\n\t\t1\n\t],\n\t[\n\t\t106.652,\n\t\t10.8188,\n\t\t0\n\t],\n\t[\n\t\t104.545,\n\t\t28.8006,\n\t\t1\n\t],\n\t[\n\t\t118.412,\n\t\t35.0461,\n\t\t1\n\t],\n\t[\n\t\t115.7344,\n\t\t32.8822,\n\t\t1\n\t],\n\t[\n\t\t105.86,\n\t\t34.5594,\n\t\t1\n\t],\n\t[\n\t\t84.9527,\n\t\t45.4665,\n\t\t1\n\t],\n\t[\n\t\t55.8744,\n\t\t54.5575,\n\t\t0\n\t],\n\t[\n\t\t101.7985,\n\t\t26.54,\n\t\t1\n\t],\n\t[\n\t\t117.05,\n\t\t30.5822,\n\t\t1\n\t],\n\t[\n\t\t110.039,\n\t\t25.2181,\n\t\t1\n\t],\n\t[\n\t\t107.0007,\n\t\t27.5895,\n\t\t1\n\t],\n\t[\n\t\t98.5317,\n\t\t24.4011,\n\t\t1\n\t],\n\t[\n\t\t112.9692,\n\t\t38.5975,\n\t\t1\n\t],\n\t[\n\t\t110.443,\n\t\t29.1028,\n\t\t1\n\t],\n\t[\n\t\t112.291,\n\t\t32.1506,\n\t\t1\n\t],\n\t[\n\t\t122.229,\n\t\t37.1871,\n\t\t1\n\t],\n\t[\n\t\t111.64,\n\t\t28.9189,\n\t\t1\n\t],\n\t[\n\t\t113.482,\n\t\t40.0603,\n\t\t1\n\t],\n\t[\n\t\t119.119,\n\t\t36.6467,\n\t\t1\n\t],\n\t[\n\t\t118.256,\n\t\t29.7333,\n\t\t1\n\t],\n\t[\n\t\t120.976,\n\t\t32.0708,\n\t\t1\n\t],\n\t[\n\t\t108.433,\n\t\t30.8017,\n\t\t1\n\t],\n\t[\n\t\t140.415,\n\t\t36.1811,\n\t\t0\n\t],\n\t[\n\t\t119.125,\n\t\t33.7908,\n\t\t1\n\t],\n\t[\n\t\t109.8614,\n\t\t39.49,\n\t\t1\n\t],\n\t[\n\t\t107.206,\n\t\t33.1341,\n\t\t1\n\t],\n\t[\n\t\t99.1683,\n\t\t25.0533,\n\t\t1\n\t],\n\t[\n\t\t117.8336,\n\t\t26.4263,\n\t\t1\n\t],\n\t[\n\t\t106.7993,\n\t\t39.7934,\n\t\t1\n\t],\n\t[\n\t\t105.5886,\n\t\t38.7483,\n\t\t1\n\t],\n\t[\n\t\t109.5909,\n\t\t38.3597,\n\t\t1\n\t],\n\t[\n\t\t109.554,\n\t\t36.6369,\n\t\t1\n\t],\n\t[\n\t\t119.0589,\n\t\t39.6664,\n\t\t1\n\t],\n\t[\n\t\t122.854,\n\t\t41.1053,\n\t\t1\n\t],\n\t[\n\t\t111.0314,\n\t\t35.1164,\n\t\t1\n\t],\n\t[\n\t\t114.737,\n\t\t26.8569,\n\t\t1\n\t],\n\t[\n\t\t109.3089,\n\t\t27.8833,\n\t\t1\n\t],\n\t[\n\t\t129.451,\n\t\t42.8828,\n\t\t1\n\t],\n\t[\n\t\t117.9643,\n\t\t28.3797,\n\t\t1\n\t],\n\t[\n\t\t118.788,\n\t\t37.5086,\n\t\t1\n\t],\n\t[\n\t\t121.233,\n\t\t25.0777,\n\t\t0\n\t],\n\t[\n\t\t104.9594,\n\t\t25.0864,\n\t\t1\n\t],\n\t[\n\t\t107.4295,\n\t\t31.1302,\n\t\t1\n\t],\n\t[\n\t\t126.493,\n\t\t33.5113,\n\t\t0\n\t],\n\t[\n\t\t120.56,\n\t\t15.186,\n\t\t0\n\t],\n\t[\n\t\t98.4858,\n\t\t24.9381,\n\t\t1\n\t],\n\t[\n\t\t113.07,\n\t\t23.0833,\n\t\t1\n\t],\n\t[\n\t\t114.0791,\n\t\t32.5408,\n\t\t1\n\t],\n\t[\n\t\t94.3353,\n\t\t29.3033,\n\t\t1\n\t],\n\t[\n\t\t110.4548,\n\t\t19.1382,\n\t\t1\n\t],\n\t[\n\t\t131.193,\n\t\t45.293,\n\t\t1\n\t],\n\t[\n\t\t99.3736,\n\t\t23.2739,\n\t\t1\n\t],\n\t[\n\t\t80.2917,\n\t\t41.2625,\n\t\t1\n\t],\n\t[\n\t\t90.9119,\n\t\t29.2978,\n\t\t1\n\t],\n\t[\n\t\t55.1614,\n\t\t24.8964,\n\t\t0\n\t],\n\t[\n\t\t117.33,\n\t\t49.5667,\n\t\t1\n\t],\n\t[\n\t\t113.592,\n\t\t22.1496,\n\t\t0\n\t],\n\t[\n\t\t95.9779,\n\t\t21.7022,\n\t\t0\n\t],\n\t[\n\t\t117.176,\n\t\t29.3386,\n\t\t1\n\t],\n\t[\n\t\t81.3303,\n\t\t43.9558,\n\t\t1\n\t],\n\t[\n\t\t121.429,\n\t\t28.5622,\n\t\t1\n\t],\n\t[\n\t\t112.615,\n\t\t32.9808,\n\t\t1\n\t],\n\t[\n\t\t100.7593,\n\t\t27.5403,\n\t\t1\n\t],\n\t[\n\t\t106.2169,\n\t\t36.0789,\n\t\t1\n\t],\n\t[\n\t\t113.126,\n\t\t36.2475,\n\t\t1\n\t],\n\t[\n\t\t123.918,\n\t\t47.2396,\n\t\t1\n\t],\n\t[\n\t\t121.062,\n\t\t41.1014,\n\t\t1\n\t],\n\t[\n\t\t93.6692,\n\t\t42.8414,\n\t\t1\n\t],\n\t[\n\t\t110.642,\n\t\t26.802,\n\t\t1\n\t],\n\t[\n\t\t141.692,\n\t\t42.7752,\n\t\t0\n\t],\n\t[\n\t\t126.451,\n\t\t37.4691,\n\t\t0\n\t],\n\t[\n\t\t125.1406,\n\t\t46.7464,\n\t\t1\n\t],\n\t[\n\t\t106.6449,\n\t\t31.7384,\n\t\t1\n\t],\n\t[\n\t\t76.02,\n\t\t39.5429,\n\t\t1\n\t],\n\t[\n\t\t82.8729,\n\t\t41.6779,\n\t\t1\n\t],\n\t[\n\t\t116.133,\n\t\t24.35,\n\t\t1\n\t],\n\t[\n\t\t111.248,\n\t\t23.4567,\n\t\t1\n\t],\n\t[\n\t\t105.807,\n\t\t21.2212,\n\t\t0\n\t],\n\t[\n\t\t127.646,\n\t\t26.1958,\n\t\t0\n\t],\n\t[\n\t\t105.8733,\n\t\t26.2606,\n\t\t1\n\t],\n\t[\n\t\t111.1428,\n\t\t37.6833,\n\t\t1\n\t],\n\t[\n\t\t118.0026,\n\t\t39.7178,\n\t\t1\n\t],\n\t[\n\t\t122.0083,\n\t\t46.1953,\n\t\t1\n\t],\n\t[\n\t\t109.219,\n\t\t11.9982,\n\t\t0\n\t],\n\t[\n\t\t126.791,\n\t\t37.5583,\n\t\t0\n\t],\n\t[\n\t\t102.3483,\n\t\t38.5422,\n\t\t1\n\t],\n\t[\n\t\t100.3011,\n\t\t34.4181,\n\t\t1\n\t],\n\t[\n\t\t106.767,\n\t\t47.8431,\n\t\t0\n\t],\n\t[\n\t\t110.9078,\n\t\t32.5917,\n\t\t1\n\t],\n\t[\n\t\t106.656,\n\t\t-6.1256,\n\t\t0\n\t],\n\t[\n\t\t122.7675,\n\t\t47.8658,\n\t\t1\n\t],\n\t[\n\t\t106.96,\n\t\t23.7206,\n\t\t1\n\t],\n\t[\n\t\t145.729,\n\t\t15.119,\n\t\t0\n\t],\n\t[\n\t\t128.6553,\n\t\t35.8969,\n\t\t0\n\t],\n\t[\n\t\t139.78,\n\t\t35.5523,\n\t\t0\n\t],\n\t[\n\t\t100.959,\n\t\t22.7933,\n\t\t1\n\t],\n\t[\n\t\t109.7,\n\t\t27.4411,\n\t\t1\n\t],\n\t[\n\t\t85.3591,\n\t\t27.6966,\n\t\t0\n\t],\n\t[\n\t\t105.4721,\n\t\t27.2671,\n\t\t1\n\t],\n\t[\n\t\t99.8829,\n\t\t19.9523,\n\t\t0\n\t],\n\t[\n\t\t100.025,\n\t\t23.7381,\n\t\t1\n\t],\n\t[\n\t\t138.1878,\n\t\t34.796,\n\t\t0\n\t],\n\t[\n\t\t99.7864,\n\t\t22.4158,\n\t\t1\n\t],\n\t[\n\t\t128.938,\n\t\t35.1795,\n\t\t0\n\t],\n\t[\n\t\t118.0739,\n\t\t41.1225,\n\t\t1\n\t],\n\t[\n\t\t108.8311,\n\t\t29.5133,\n\t\t1\n\t],\n\t[\n\t\t102.563,\n\t\t17.9883,\n\t\t0\n\t],\n\t[\n\t\t112.0967,\n\t\t43.4225,\n\t\t1\n\t],\n\t[\n\t\t96.1332,\n\t\t16.9073,\n\t\t0\n\t],\n\t[\n\t\t134.016,\n\t\t34.2142,\n\t\t0\n\t],\n\t[\n\t\t103.755,\n\t\t27.3256,\n\t\t1\n\t],\n\t[\n\t\t109.997,\n\t\t40.56,\n\t\t1\n\t],\n\t[\n\t\t107.7428,\n\t\t40.926,\n\t\t1\n\t],\n\t[\n\t\t121.552,\n\t\t25.0694,\n\t\t0\n\t],\n\t[\n\t\t115.964,\n\t\t43.9156,\n\t\t1\n\t],\n\t[\n\t\t89.0987,\n\t\t43.0308,\n\t\t1\n\t],\n\t[\n\t\t116.051,\n\t\t5.9372,\n\t\t0\n\t],\n\t[\n\t\t-0.4619,\n\t\t51.4706,\n\t\t0\n\t],\n\t[\n\t\t105.797,\n\t\t33.788,\n\t\t1\n\t],\n\t[\n\t\t-95.3414,\n\t\t29.9844,\n\t\t0\n\t],\n\t[\n\t\t74.4036,\n\t\t31.5216,\n\t\t0\n\t],\n\t[\n\t\t122.3586,\n\t\t40.5425,\n\t\t1\n\t],\n\t[\n\t\t99.5543,\n\t\t31.7574,\n\t\t1\n\t],\n\t[\n\t\t123.0197,\n\t\t45.5053,\n\t\t1\n\t],\n\t[\n\t\t130.465,\n\t\t46.8434,\n\t\t1\n\t],\n\t[\n\t\t122.2,\n\t\t43.5567,\n\t\t1\n\t],\n\t[\n\t\t100.0533,\n\t\t29.3231,\n\t\t1\n\t],\n\t[\n\t\t113.1081,\n\t\t41.1297,\n\t\t1\n\t],\n\t[\n\t\t94.8092,\n\t\t40.1611,\n\t\t1\n\t],\n\t[\n\t\t120.35,\n\t\t22.5771,\n\t\t0\n\t],\n\t[\n\t\t130.451,\n\t\t33.5859,\n\t\t0\n\t],\n\t[\n\t\t98.3414,\n\t\t39.8569,\n\t\t1\n\t],\n\t[\n\t\t8.5492,\n\t\t47.4647,\n\t\t0\n\t],\n\t[\n\t\t132.6603,\n\t\t47.11,\n\t\t1\n\t],\n\t[\n\t\t89.3114,\n\t\t29.3519,\n\t\t1\n\t],\n\t[\n\t\t99.6772,\n\t\t27.7936,\n\t\t1\n\t],\n\t[\n\t\t102.3522,\n\t\t32.5315,\n\t\t1\n\t],\n\t[\n\t\t116.747,\n\t\t25.6747,\n\t\t1\n\t],\n\t[\n\t\t134.3664,\n\t\t48.1995,\n\t\t1\n\t],\n\t[\n\t\t113.306,\n\t\t52.0263,\n\t\t0\n\t],\n\t[\n\t\t116.3467,\n\t\t35.2928,\n\t\t1\n\t],\n\t[\n\t\t127.3089,\n\t\t50.1716,\n\t\t1\n\t],\n\t[\n\t\t97.0364,\n\t\t32.8364,\n\t\t1\n\t],\n\t[\n\t\t123.979,\n\t\t10.3075,\n\t\t0\n\t],\n\t[\n\t\t98.9862,\n\t\t8.0991,\n\t\t0\n\t],\n\t[\n\t\t129.0191,\n\t\t47.7521,\n\t\t1\n\t],\n\t[\n\t\t131.737,\n\t\t33.4794,\n\t\t0\n\t],\n\t[\n\t\t88.0858,\n\t\t47.7499,\n\t\t1\n\t],\n\t[\n\t\t-74.1687,\n\t\t40.6925,\n\t\t0\n\t],\n\t[\n\t\t126.133,\n\t\t48.445,\n\t\t1\n\t],\n\t[\n\t\t101.005,\n\t\t12.6799,\n\t\t0\n\t],\n\t[\n\t\t-83.3534,\n\t\t42.2124,\n\t\t0\n\t],\n\t[\n\t\t100.675,\n\t\t38.8019,\n\t\t1\n\t],\n\t[\n\t\t124.286,\n\t\t40.0247,\n\t\t1\n\t],\n\t[\n\t\t125.7033,\n\t\t42.2539,\n\t\t1\n\t],\n\t[\n\t\t97.1083,\n\t\t30.5536,\n\t\t1\n\t],\n\t[\n\t\t-87.9048,\n\t\t41.9786,\n\t\t0\n\t],\n\t[\n\t\t-84.4281,\n\t\t33.6367,\n\t\t0\n\t],\n\t[\n\t\t-122.309,\n\t\t47.449,\n\t\t0\n\t],\n\t[\n\t\t94.7861,\n\t\t36.4006,\n\t\t1\n\t],\n\t[\n\t\t104.979,\n\t\t26.6094,\n\t\t1\n\t],\n\t[\n\t\t-71.0052,\n\t\t42.3643,\n\t\t0\n\t],\n\t[\n\t\t114.35,\n\t\t30.7,\n\t\t1\n\t],\n\t[\n\t\t104.3255,\n\t\t23.5583,\n\t\t1\n\t],\n\t[\n\t\t120.435,\n\t\t41.5381,\n\t\t1\n\t],\n\t[\n\t\t108.199,\n\t\t16.0439,\n\t\t0\n\t],\n\t[\n\t\t112.345,\n\t\t16.8336,\n\t\t1\n\t],\n\t[\n\t\t126.3828,\n\t\t34.9914,\n\t\t0\n\t],\n\t[\n\t\t114.4256,\n\t\t36.5258,\n\t\t1\n\t],\n\t[\n\t\t12.656,\n\t\t55.6179,\n\t\t0\n\t],\n\t[\n\t\t-122.302,\n\t\t47.53,\n\t\t0\n\t],\n\t[\n\t\t102.161,\n\t\t19.8973,\n\t\t0\n\t],\n\t[\n\t\t46.6988,\n\t\t24.9576,\n\t\t0\n\t],\n\t[\n\t\t19.2611,\n\t\t47.4298,\n\t\t0\n\t],\n\t[\n\t\t17.9186,\n\t\t59.6519,\n\t\t0\n\t],\n\t[\n\t\t88.0083,\n\t\t38.9747,\n\t\t1\n\t],\n\t[\n\t\t77.0752,\n\t\t38.2811,\n\t\t1\n\t],\n\t[\n\t\t14.26,\n\t\t50.1008,\n\t\t0\n\t],\n\t[\n\t\t116.388,\n\t\t39.7828,\n\t\t1\n\t],\n\t[\n\t\t20.9671,\n\t\t52.1657,\n\t\t0\n\t],\n\t[\n\t\t100.277,\n\t\t5.2971,\n\t\t0\n\t],\n\t[\n\t\t133.855,\n\t\t34.7569,\n\t\t0\n\t],\n\t[\n\t\t120.621,\n\t\t24.2647,\n\t\t0\n\t],\n\t[\n\t\t132.919,\n\t\t34.4361,\n\t\t0\n\t],\n\t[\n\t\t103.9931,\n\t\t10.1698,\n\t\t0\n\t],\n\t[\n\t\t-97.038,\n\t\t32.8968,\n\t\t0\n\t],\n\t[\n\t\t101.549,\n\t\t3.1306,\n\t\t0\n\t],\n\t[\n\t\t107.988,\n\t\t26.972,\n\t\t1\n\t],\n\t[\n\t\t44.9547,\n\t\t41.6692,\n\t\t0\n\t],\n\t[\n\t\t-157.9242,\n\t\t21.3206,\n\t\t0\n\t],\n\t[\n\t\t103.6822,\n\t\t32.8533,\n\t\t1\n\t],\n\t[\n\t\t106.725,\n\t\t20.8194,\n\t\t0\n\t],\n\t[\n\t\t34.8867,\n\t\t32.0114,\n\t\t0\n\t],\n\t[\n\t\t145.755,\n\t\t-16.8858,\n\t\t0\n\t],\n\t[\n\t\t36.9278,\n\t\t-1.3192,\n\t\t0\n\t],\n\t[\n\t\t28.246,\n\t\t-26.1392,\n\t\t0\n\t],\n\t[\n\t\t69.2812,\n\t\t41.2579,\n\t\t0\n\t],\n\t[\n\t\t99.7287,\n\t\t6.3297,\n\t\t0\n\t],\n\t[\n\t\t142.718,\n\t\t46.8887,\n\t\t0\n\t],\n\t[\n\t\t0.235,\n\t\t51.885,\n\t\t0\n\t],\n\t[\n\t\t115.967,\n\t\t-31.9403,\n\t\t0\n\t],\n\t[\n\t\t130.877,\n\t\t-12.4147,\n\t\t0\n\t],\n\t[\n\t\t104.119,\n\t\t1.121,\n\t\t0\n\t],\n\t[\n\t\t132.148,\n\t\t43.399,\n\t\t0\n\t],\n\t[\n\t\t103.67,\n\t\t1.6413,\n\t\t0\n\t],\n\t[\n\t\t123.8535,\n\t\t9.6654,\n\t\t0\n\t],\n\t[\n\t\t37.9063,\n\t\t55.4088,\n\t\t0\n\t],\n\t[\n\t\t37.2615,\n\t\t55.5915,\n\t\t0\n\t],\n\t[\n\t\t49.2787,\n\t\t55.6062,\n\t\t0\n\t],\n\t[\n\t\t30.8947,\n\t\t50.345,\n\t\t0\n\t],\n\t[\n\t\t130.302,\n\t\t33.1497,\n\t\t0\n\t],\n\t[\n\t\t119.9117,\n\t\t47.3106,\n\t\t1\n\t],\n\t[\n\t\t109.706,\n\t\t31.064,\n\t\t1\n\t]\n];","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n","function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n","export default function cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import count from \"../count.js\";\n\nexport default function(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n","import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport range from \"./range.js\";\nimport {tickStep} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n","import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n","export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n","export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","export default function(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n","import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\nimport minIndex from \"./minIndex.js\";\n\nexport default function leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n","import ascending from \"./ascending.js\";\nimport maxIndex from \"./maxIndex.js\";\n\nexport default function greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n","import leastIndex from \"./leastIndex.js\";\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n","export default function shuffle(array, i0 = 0, i1 = array.length) {\n  var m = i1 - (i0 = +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import min from \"./min.js\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose.js\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export {default as bisect, bisectRight, bisectLeft} from \"./bisect.js\";\nexport {default as ascending} from \"./ascending.js\";\nexport {default as bisector} from \"./bisector.js\";\nexport {default as count} from \"./count.js\";\nexport {default as cross} from \"./cross.js\";\nexport {default as cumsum} from \"./cumsum.js\";\nexport {default as descending} from \"./descending.js\";\nexport {default as deviation} from \"./deviation.js\";\nexport {default as extent} from \"./extent.js\";\nexport {default as group, groups, rollup, rollups} from \"./group.js\";\nexport {default as bin, default as histogram} from \"./bin.js\"; // Deprecated; use bin.\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis.js\";\nexport {default as thresholdScott} from \"./threshold/scott.js\";\nexport {default as thresholdSturges} from \"./threshold/sturges.js\";\nexport {default as max} from \"./max.js\";\nexport {default as maxIndex} from \"./maxIndex.js\";\nexport {default as mean} from \"./mean.js\";\nexport {default as median} from \"./median.js\";\nexport {default as merge} from \"./merge.js\";\nexport {default as min} from \"./min.js\";\nexport {default as minIndex} from \"./minIndex.js\";\nexport {default as pairs} from \"./pairs.js\";\nexport {default as permute} from \"./permute.js\";\nexport {default as quantile, quantileSorted} from \"./quantile.js\";\nexport {default as quickselect} from \"./quickselect.js\";\nexport {default as range} from \"./range.js\";\nexport {default as least} from \"./least.js\";\nexport {default as leastIndex} from \"./leastIndex.js\";\nexport {default as greatest} from \"./greatest.js\";\nexport {default as greatestIndex} from \"./greatestIndex.js\";\nexport {default as scan} from \"./scan.js\"; // Deprecated; use leastIndex.\nexport {default as shuffle} from \"./shuffle.js\";\nexport {default as sum} from \"./sum.js\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks.js\";\nexport {default as transpose} from \"./transpose.js\";\nexport {default as variance} from \"./variance.js\";\nexport {default as zip} from \"./zip.js\";\n","import airports from './airports.json';\nimport { extent } from 'd3-array';\n\n// Orthographic projection\n\nfunction project(lon, lat) {\n  const azimuth = lon * (Math.PI / 180);\n  const inclination = Math.PI / 2 - lat * (Math.PI / 180);\n\n  const x = Math.sin(inclination) * Math.cos(azimuth);\n  const y = Math.sin(inclination) * Math.sin(azimuth);\n  const z = Math.cos(inclination);\n\n  if (x < 0) return false;\n\n  return new Float32Array([y, z]);\n}\n\nconsole.log(\n  'lon extent',\n  extent(airports, d => d[0]),\n);\nconsole.log(\n  'lat extent',\n  extent(airports, d => d[1]),\n);\n\nexport function compute_flight_paths(buffer) {\n  const array = new Uint16Array(buffer);\n\n  let vertices = [];\n\n  for (let i = 0; i < array.length; i += 3) {\n    const [from_lon, from_lat, from_china] = airports[array[i]];\n    const [to_lon, to_lat, to_china] = airports[array[i + 1]];\n    const count = array[i + 2];\n    // vertices.push(...project(from_lon, from_lat), ...project(to_lon, to_lat));\n  }\n\n  vertices = [];\n  let fromChina = [];\n  airports.forEach(([lon, lat, from_china]) => {\n    const a = project(lon, lat);\n    if (a) {\n      vertices.push(...a);\n      fromChina.push(from_china);\n    }\n  });\n\n  return { vertices: new Float32Array(vertices), fromChina };\n}\n\nexport function compute_vertices(buffer) {\n  // First uint32 (4 bytes) contain the number of line strings.\n  const count = new Uint32Array(buffer, 0, 1)[0];\n  // Each of the next `count` uint32s stores the vertex count of a line string.\n  const indices = new Uint32Array(buffer, 4, count);\n  // Rest of bytes contain vertex coordinates (alternating long-lat pairs)\n  const coords = new Float32Array(buffer, 4 * (indices.length + 1));\n\n  const vertices = [];\n  let v = 0;\n\n  for (let i = 0; i < indices.length; i += 1) {\n    const len = indices[i];\n\n    let a = project(coords[v++], coords[v++]);\n\n    for (let j = 1; j < len; j += 1) {\n      const b = project(coords[v++], coords[v++]);\n\n      if (!a || !b) continue;\n\n      vertices.push(...a, ...b);\n\n      a = b;\n    }\n  }\n\n  return new Float32Array(vertices);\n}\n","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nvarying vec2 v_position;\\nvarying float v_fromChina;\\n\\nvoid main() {\\n  gl_FragColor = vec4(v_fromChina, v_fromChina, 0, 1.);\\n}\\n\";","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec2 aspectRatio;\\n\\nattribute vec2 position;\\nattribute float fromChina;\\n\\nvarying vec2 v_position;\\nvarying float v_fromChina;\\n\\nvoid main() {\\n  v_fromChina = fromChina;\\n  v_position = position;\\n\\n  gl_PointSize = 7.;\\n  gl_Position = vec4(position / aspectRatio, 0, 1);\\n}\\n\";","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nvoid main() {\\n  gl_FragColor = vec4(vec3(230. / 255.), 1.);\\n}\\n\";","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec2 aspectRatio;\\n\\nattribute vec2 position;\\n\\nvoid main() {\\n  gl_Position = vec4(position / aspectRatio, 0, 1);\\n}\\n\";","module.exports=\"#define PI 3.1415926538\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D landTexture;\\nuniform sampler2D monoTexture;\\nuniform float tick;\\n\\nvarying vec2 v_position;\\n\\nvec3 LIGHT_REVERSED = vec3(-0.5, 0.5, 1);\\nfloat LIGHT_MAG = distance(LIGHT_REVERSED, vec3(0));\\n\\nvoid main() {\\n\\n  // The screen is the tangent plane. Each (x, y) we treat as an\\n  // orthographically projected point of the front-facing hemisphere.\\n  // The textures are equirectangular projections, which means the position of\\n  // an image pixel is just the longitude-latitude.\\n  // For each fragment, then, we must figure out the corresponding lat-long to\\n  // retrieve the correct image pixel.\\n\\n  // 1. Define the projected coordinates.\\n  //    Discard fragments outside the great circle.\\n\\n  float x = v_position.x;\\n  float y = v_position.y;\\n  float c = x * x + y * y; // Distance from center of orthographic projection\\n\\n  if (sqrt(c) > 1.) {\\n    discard;\\n  }\\n\\n  // 2. Invert projection to get spherical coordinates\\n\\n  float depth = sqrt(1. - c);        // Purposefully ignoring negative face\\n  float longitude = atan(x / depth) + PI / 2.; // [-PI / 2, PI / 2]\\n  float latitude = asin(y);          // [-PI / 2, PI / 2]\\n\\n  // 3. Do equirectangular projection to get plane/texture coordinates\\n  //    For longitude: Map to [0.25, 0.75] (center is 0.5, range is 0.5)\\n  //    For latitude: Map to [0, 1] (center is 0.5, range is 0.5)\\n\\n  float texture_x = (longitude + PI) / (2. * PI);\\n  float texture_y = (latitude + PI / 2.) / PI;\\n\\n  // 4. Grab texture colors. Black = land, white = no land.\\n\\n  vec2 texture_position = vec2(texture_x, texture_y);\\n  vec3 texture_color = texture2D(landTexture, texture_position).rgb;\\n  vec3 mono_color = texture2D(monoTexture, texture_position).rgb;\\n\\n  texture_color += vec3(240. / 255.) * mono_color;\\n\\n  // 5. Calculate lighting.\\n\\n  float dotted = dot(vec3(x, y, depth), LIGHT_REVERSED) / LIGHT_MAG;\\n  float light = sign(dotted) * pow(dotted, 1.2);\\n  light = min(1.0, 0.55 + light * 0.3);\\n\\n  gl_FragColor = vec4(texture_color, 1.);\\n  gl_FragColor.rgb *= light;\\n}\\n\";","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec2 aspectRatio;\\n\\nattribute vec2 position;\\n\\nvarying vec2 v_position;\\n\\nvoid main() {\\n  // For some reason textures only cover the first quadrant of the clip space.\\n  // Remember that v_position should become the coordinate of the texture in\\n  // clip space. Cutting position in half means that (1, 1) in the clip space\\n  // becomes (0.5, 0.5) on the texture.\\n  // two quadrants' worth of space.\\n  // Adding 0.5 to position means that (1, 1) in the clip space becomes (1, 1)\\n  // on the texture, and similarly (0, 0) -> (0.5, 0.5) (the texture's center)\\n  // and (-1, -1) -> (0, 0).\\n\\n  // v_position = 0.5 + position * 0.5;\\n  v_position = position * aspectRatio;\\n\\n  // gl_Position should be position because the position attribute covers the\\n  // whole clip space\\n  gl_Position = vec4(position, 0, 1);\\n}\\n\";","import createREGL from 'regl';\nimport { compute_vertices, compute_flight_paths } from './vertices';\nimport airports from './airports.json';\n\nimport pointsFrag from './shaders/points.frag';\nimport pointsVert from './shaders/points.vert';\nimport borderFrag from './shaders/borders.frag';\nimport borderVert from './shaders/borders.vert';\nimport textureFrag from './shaders/texture.frag';\nimport textureVert from './shaders/texture.vert';\n\nimport spec from './specularity@2x.png';\nimport mono from './mono@2x.png';\n\nconst regl = createREGL();\n\nconst base =\n  'https://static01.nyt.com/newsgraphics/2020/02/04/coronavirus-flights/67d5b188d41684d2a82da11e94e358b4a769735e';\n\nasync function getVertices() {\n  return fetch(`${base}/geometry/borders.dat`)\n    .then(response => response.arrayBuffer())\n    .then(buffer => compute_vertices(buffer));\n}\n\nasync function getTexture(filename) {\n  return new Promise(resolve => {\n    const image = new Image();\n    // image.src = `${base}/textures/${filename}`;\n    image.src = filename;\n    image.crossOrigin = '';\n    image.onload = () => resolve(regl.texture({ data: image, flipY: true }));\n  });\n}\n\nfunction createLineDrawer(vertices) {\n  return regl({\n    frag: borderFrag,\n    vert: borderVert,\n\n    uniforms: { aspectRatio, },\n\n    attributes: { position: vertices },\n\n    count: vertices.length / 2,\n    primitive: 'lines',\n  });\n}\n\nasync function main() {\n  const [borders, landTexture, monoTexture, flights] = await Promise.all([\n    getVertices(),\n    // getTexture('specularity@2x.png'),\n    // getTexture('mono@2x.png'),\n    getTexture(spec),\n    getTexture(mono),\n    getFlights(),\n  ]);\n\n  const drawBorders = createLineDrawer(borders);\n\n  const drawFlights = regl({\n    frag: pointsFrag,\n    vert: pointsVert,\n\n    uniforms: { aspectRatio, },\n\n    attributes: { position: flights.vertices, fromChina: flights.fromChina },\n\n    count: flights.vertices.length / 2,\n    primitive: 'points',\n  })\n\n  const drawTexture = regl({\n    frag: textureFrag,\n    vert: textureVert,\n\n    uniforms: {\n      landTexture,\n      monoTexture,\n      tick: regl.prop('tick'),\n      aspectRatio,\n    },\n\n    attributes: {\n      // Two triangles that cover the whole clip space\n      position: regl.buffer([\n        [-1, 1],\n        [1, -1],\n        [1, 1],\n        [-1, 1],\n        [1, -1],\n        [-1, -1],\n      ]),\n    },\n\n    count: 6,\n  });\n\n  regl.frame(({ tick }) => {\n    regl.clear({\n      color: [0, 0, 0, 0],\n      depth: 1,\n    });\n    drawFlights();\n    drawBorders();\n    drawTexture({ tick });\n  });\n}\n\nasync function getFlights() {\n  return fetch(`${base}/20200123.dat`)\n    .then(response => response.arrayBuffer())\n    .then(buffer => compute_flight_paths(buffer));\n}\n\nmain().catch(console.error);\n\nfunction aspectRatio({ viewportWidth, viewportHeight }) {\n  const ar = viewportWidth / viewportHeight;\n  return ar > 1 ? [ar, 1] : [1, 1 / ar];\n}\n"]}